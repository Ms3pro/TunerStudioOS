TunerStudio_OS_dev Release Notes


Release v0.4
04-February-2024
Henry Wright.

Added 3D table interpolation for u8 data type.

Improved efficiency of 2D table interpolation. Removed reference to u16 table interpolation. This is not tested yet.

Updated documentation.

Development Direction:
Adding other data types for table lookup.

----------------------------------------------------------------------------------------------------------
Release v0.3
18-July-2023
Henry Wright.

Added support for Arduino Nano.

Added a template for recieving a can message object with diagnostics and tested this with a motec PLM.

Revised the way that data is sent to Tuner studio by removing the "CurrentStatus" structure and replaced it with a Out_TS data structure union.

This makes it much easier to send multiple data types (gets rid of LowByte and HighByte) saves 80bytes of memory and in conjunction with the .ini use of NextOffset and LastOffset, easier and quicker to insert new variables.

Other small bugfixes included.

Development Direction:
 - CAN bus OBD structure

----------------------------------------------------------------------------------------------------------
Release v0.2
04-July-2023
Henry Wright.

Arduino UNO using the AVRATMEGA328P processor supported!

Compiles with approx 1KB RAM remaining on the UNO. CANBUS also works. Loop speed the same as Mega.

New Setting in .ini file to select correct flash size. Use 1Kb for UNO and 8KB for Mega. 

Also sped up EEPROM clear and fixed a few minor EEPROM memory address bugs. 

Fixed file names for compliing with Arduino IDE.

Development Direction:
 - Moving to structure based method of sending serial data. Should be much less tedious than updating FullStatus[XX]
 - CAN bus standard functions and enable conditions.

----------------------------------------------------------------------------------------------------------
Release v0.1
01-July-2023
Henry Wright.

First Release! The operating system is working and I have provided a few examples of different ways of manipulating data.

Functionality so far:
1.	Define variables which are saved to and recalled from the internal memory (EEPROM) of the Arduino.
2.	Send the variables in memory to TS and receive new data when variables in TS are changed.
3.	Write (Burn) these variables to the EEPROM.
4.	Send measurement variables at a defined rate to TS for display and logging.
5.	Receive commands to execute certain functions on the Arduino. i.e. switch an output on or off.
6.	Provide a task based timing system to execute tasks with feedback if those tasks have overrun.


Known Bugs:
 - Always get the warning about version number being unexpected. This is apparently normal since TS wants to only be used
   with "approved devices. So we are sort of spoofing a speeduino. 
 - TS sometimes disconnects while waiting for a burn and takes a few trys to actually burn large data.
 - EEProm Clear function does not work, TS forces a re-connect and reboot, probably same problem as above.


Development Direction:
 - Working on supporting Arduino Uno (1kb EEPROM)
 - Moving to structure based method of sending serial data. Should be much less tedious than updating FullStatus[XX]
 - CAN bus standard functions and enable conditions.

----------------------------------------------------------------------------------------------------------