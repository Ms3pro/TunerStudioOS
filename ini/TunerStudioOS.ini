;-------------------------------------------------------------------------------
;---------------------------------------------------------------
#set FAST_COMMS

#set EEPROM_SIZE_8KB

[MegaTune]
   MTversion      = 2.25 ; MegaTune itself; needs to match exec version.
#if FAST_COMMS
   queryCommand   = "r\$tsCanId\x0f\x00\x00\x00\x14" ; Verify against signature. this is what ts sends to look for can devices too...
   versionInfo    = "r\$tsCanId\x0e\x00\x00\x00\x3c"  ; Put this in the title bar. the 3c if telling to send 60 bytes

   ;structure is r\canid\command\offsetLb\offsetHb\lengthLb\lengthHb

#else
   queryCommand   = "Q"
   versionInfo    = "S"  ; Put this in the title bar.
#endif
   signature      = "speeduino_TS_OS_V0.40_dev"

[TunerStudio]
   iniSpecVersion = 3.66

;-------------------------------------------------------------------------------

[SettingGroups]
   ; the referenceName will over-ride previous, so if you are creating a
   ; settingGroup with a reference name of lambdaSensor, it will replace the
   ; setting group defined in the settingGroups.xml of the TunerStudio config
   ; folder. If is is an undefined referenceName, it will be added.
   ; keyword    =  referenceName,  DisplayName

    ;settingGroup = boostUnits, "Boost table units"
    ;settingOption = DEFAULT, "kPa"
    ;settingOption = BOOSTPSI, "PSI"
    settingGroup = enablehardware_test, "Enable Hardware Test Page"

[PcVariables]
   ; valid types: boolean, double, int, list
   ;
   ; no offset as they are local variables.
   ; entry format the same as Constants, except there is no offset.
   ; arrays are not yet supported.
   ; name = class,  type,    shape,  units,       scale, translate,    lo,      hi, digits
   ; name = type, min, max;
   ;
   ; type List: value will be index.
    tsCanId        	= bits,   	U08,   [0:3], "CAN ID 0", "CAN ID 1", "CAN ID 2", "CAN ID 3", "CAN ID 4", "CAN ID 5", "CAN ID 6", "CAN ID 7", "CAN ID 8", "CAN ID 9", "CAN ID 10","CAN ID 11","CAN ID 12","CAN ID 13","CAN ID 14","INVALID"
    inportlabel  = bits, U08, [0:5],"INVALID", "In 1", "In 2", "In 3", "In 4", "In 5", "In 6", "In 7", "In 8", "In 9", "In 10", "In 11", "In 12", "In 13", "In 14", "In 15", "In 16", "In 17", "In 18", "In 19", "In 20", "In 21", "In 22", "In 23", "In 24", "In 25", "In 26", "In 27", "In 28", "In 29", "In 30", "In 31", "In 32", "INVALID"
	  outportlabel  = bits, U08, [0:5],"INVALID", "OUT 1", "OUT 2", "OUT 3", "OUT 4", "OUT 5", "OUT 6", "OUT 7", "OUT 8", "OUT 9", "OUT 10", "OUT 11", "OUT 12", "OUT 13", "OUT 14", "OUT 15", "OUT 16", "OUT 17", "OUT 18", "OUT 19", "OUT 20", "OUT 21", "OUT 22", "OUT 23", "OUT 24", "OUT 25", "OUT 26", "OUT 27", "OUT 28", "OUT 29", "OUT 30", "OUT 31", "OUT 32", "INVALID"


	;can_failtosend = = bits,   	U08,   [0:0] , "Failed", "Send OK"

[Constants]

   ;----------------------------------------------------------------------------
   ; Constants Definition
   ; --------------------
   ;
   ; Scalar Values
   ; -------------
   ; The scaling and translation values are used as follows:
   ;    msValue   = userValue / scale - translate
   ;    userValue = (msValue + translate) * scale
   ;
   ;
   ; Temperatures are fine, check out the Fielding IAC example (fastIdleT).
   ;
   ; Array Values
   ; ------------
   ; Arrays are specified just like scalars, except that they have a "shape"
   ; entry in the fourth parameter.  The shape allows you to define lists or
   ; tables, for example [8] defines a list with eight values and [2x4] defines
   ; a table with eight values (two rows and four columns).  Tables may be
   ; stored in either "X-" or "Y-order."  X-order means that memory is layed
   ; out like.
   ;
   ;     [x1,y1] [x2,y1]...[xn,y1] [x1,y2]...
   ;
   ; Y-order would be
   ;
   ;     [x1,y1] [x1,y2]...[x1,yn] [x2,y1]...
   ;
   ; To use the TableEditor, you must define two lists and a table, and
   ; the lengths of the lists must correspond to the shape of the table.
   ;
   ; Bit Fields
   ; ----------
   ; Bits are numbered 0-7, the rightmost being bit zero.  The basic
   ; data word that stores bit fields must be unsigned.
   ;
   ; You need NOT supply the correct number of labels matching the
   ; number of bits you've specified (one bit requires 2 values, two
   ; bits requires 4 values and so on).  If you neglect to supply enough
   ; labels, they will be synthesized using the sequence "1", "2" and so
   ; on based upon their position in the sequence (the cltType and matType
   ; will end up with identical lists).
   ;
   ; If you specify a label as "INVALID" (all upper case), then it will
   ; not be displayed in the combo box, so you can leave out values that
   ; make no sense.
   ;
   ;----------------------------------------------------------------------------

#if EEPROM_SIZE_8KB
     endianness          = little
     nPages              = 5
     pageSize            = 128, 374, 512, 512, 512
     pageIdentifier      = "\$tsCanId\x01" , "\$tsCanId\x02", "\$tsCanId\x03", "\$tsCanId\x04", "\$tsCanId\x05"
     pageActivationDelay = 10
  #if FAST_COMMS
     burnCommand         = "r\$tsCanId\x42\x01\x00\x00\x00" , "r\$tsCanId\x42\x02\x00\x00\x00", "r\$tsCanId\x42\x03\x00\x00\x00", "r\$tsCanId\x42\x04\x00\x00\x00", "r\$tsCanId\x42\x05\x00\x00\x00"
     pageActivate        = "r\$tsCanId\x50\x01\x00\x00\x00" , "r\$tsCanId\x50\x02\x00\x00\x00", "r\$tsCanId\x50\x03\x00\x00\x00", "r\$tsCanId\x50\x04\x00\x00\x00", "r\$tsCanId\x50\x05\x00\x00\x00"
     pageReadCommand     = "r\$tsCanId\x56%2o%2c" , "r\$tsCanId\x56%2o%2c", "r\$tsCanId\x56%2o%2c", "r\$tsCanId\x56%2o%2c", "r\$tsCanId\x56%2o%2c"
     pageValueWrite      = "r\$tsCanId\x57%2o%v0" , "r\$tsCanId\x57%2o%v0", "r\$tsCanId\x57%2o%v0", "r\$tsCanId\x57%2o%v0", "r\$tsCanId\x57%2o%v0"
  #else
     burnCommand         = "B\001" , "B\002", "B\003", "B\004", "B\005"
     pageActivate        = "P\001" , "P\002", "P\003", "P\004", "P\005"
     pageReadCommand     = "V%2o%2c" , "V%2o%2c", "V%2o%2c", "V%2o%2c", "V%2o%2c"
     pageValueWrite      = "W%2o%v" , "W%2o%v", "W%2o%v", "W%2o%v", "W%2o%v"
  #endif
#else
     endianness          = little
     nPages              = 3
     pageSize            = 128, 374, 512
     pageIdentifier      = "\$tsCanId\x01" , "\$tsCanId\x02", "\$tsCanId\x03"
     pageActivationDelay = 10
  #if FAST_COMMS
     burnCommand         = "r\$tsCanId\x42\x01\x00\x00\x00" , "r\$tsCanId\x42\x02\x00\x00\x00", "r\$tsCanId\x42\x03\x00\x00\x00" 
     pageActivate        = "r\$tsCanId\x50\x01\x00\x00\x00" , "r\$tsCanId\x50\x02\x00\x00\x00", "r\$tsCanId\x50\x03\x00\x00\x00"
     pageReadCommand     = "r\$tsCanId\x56%2o%2c" , "r\$tsCanId\x56%2o%2c", "r\$tsCanId\x56%2o%2c"
     pageValueWrite      = "r\$tsCanId\x57%2o%v0" , "r\$tsCanId\x57%2o%v0", "r\$tsCanId\x57%2o%v0"
  #else
     burnCommand         = "B\001" , "B\002", "B\003"
     pageActivate        = "P\001" , "P\002", "P\003"
     pageReadCommand     = "V%2o%2c" , "V%2o%2c", "V%2o%2c"
     pageValueWrite      = "W%2o%v" , "W%2o%v", "W%2o%v"
  #endif
#endif
	;0x42 == B == 66
	;0x50 == P == 80
	;0x56 == V == 86
	;0x57 == W == 87dec
	; %2i is the id/table number - 1 byte
	; %2o is the table offset - 2 bytes
	; %2c is the number of bytes to be read/written - 2 bytes
	; %v is the byte to be sent/written - 1 bytes
  ;  pageChunkWrite      = ""      ; No chunk write for standard MS

   blockingFactor = 127
   tableBlockingFactor = 127
   delayAfterPortOpen=1000
   blockReadTimeout = 4000
   ;crc32CheckCommand = on
   tsWriteBlocks = on
   writeBlocks = on
   interWriteDelay = 3 ;Ignored when tsWriteBlocks is on
   
   ;validateArrayBounds = true

;New for TS 3.0.08ish upwards, define lists of standard I/O options


 #define TENinv = "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"
 #define SIXTEENinv = "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"

 #define tsCanId_list      	  = "CAN ID 0", "CAN ID 1", "CAN ID 2", "CAN ID 3", "CAN ID 4", "CAN ID 5", "CAN ID 6", "CAN ID 7", "CAN ID 8", "CAN ID 9", "CAN ID 10","CAN ID 11","CAN ID 12","CAN ID 13","CAN ID 14","INVALID"

;//MCP_CAN library v1.5 mcp_can_dfs.h
 #define CAN_Baud_list = "CAN_4K096BPS", "CAN_5KBPS", "CAN_10KBPS", "CAN_20KBPS", "CAN_31K25BPS", "CAN_33K3BPS", "CAN_40KBPS", "CAN_50KBPS", "CAN_80KBPS", "CAN_100KBPS", "CAN_125KBPS", "CAN_200KBPS", "CAN_250KBPS", "CAN_500KBPS", "CAN_1000KBPS", "INVALID"
 #define CAN_Freq_list = "MCP_20MHz", "MCP_16MHz", "MCP_8MHZ", "INVALID"

 #define OBD_CAN_ADDRESS = "0x7E0", "0x7E1", "0x7E2", "0x7E3", "0x7E4", "0x7E5", "0x7E6", "0x7E7"
 
 #define Analog_Pins_List = "A0", "A1", "A2", "A3", "A4", "A5", "A6", "A7", "A8", "A9", "A10", "A11", "A12", "A13", "A14", "A15"
 #define Digital_Pins_List = "Disabled", "INVALID", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31", "32", "33", "34", "35", "36", "37", "38", "39", "40", "41", "42", "43", "44", "45", "46", "47", "48", "49", "50", "51", "52", "53", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID", "INVALID"

 #define CAN_ADDRESS_HEX_00XX = "Disabled", "0x001", "0x002", "0x003", "0x004", "0x005", "0x006", "0x007", "0x008", "0x009", "0x00A", "0x00B", "0x00C", "0x00D", "0x00E", "0x00F", "0x010", "0x011", "0x012", "0x013", "0x014", "0x015", "0x016", "0x017", "0x018", "0x019", "0x01A", "0x01B", "0x01C", "0x01D", "0x01E", "0x01F", "0x020", "0x021", "0x022", "0x023", "0x024", "0x025", "0x026", "0x027", "0x028", "0x029", "0x02A", "0x02B", "0x02C", "0x02D", "0x02E", "0x02F", "0x030", "0x031", "0x032", "0x033", "0x034", "0x035", "0x036", "0x037", "0x038", "0x039", "0x03A", "0x03B", "0x03C", "0x03D", "0x03E", "0x03F", "0x040", "0x041", "0x042", "0x043", "0x044", "0x045", "0x046", "0x047", "0x048", "0x049", "0x04A", "0x04B", "0x04C", "0x04D", "0x04E", "0x04F", "0x050", "0x051", "0x052", "0x053", "0x054", "0x055", "0x056", "0x057", "0x058", "0x059", "0x05A", "0x05B", "0x05C", "0x05D", "0x05E", "0x05F" ,"0x060", "0x061", "0x062", "0x063", "0x064", "0x065", "0x066", "0x067", "0x068", "0x069", "0x06A", "0x06B", "0x06C", "0x06D", "0x06E", "0x06F", "0x070", "0x071", "0x072", "0x073", "0x074", "0x075", "0x076", "0x077", "0x078", "0x079", "0x07A", "0x07B", "0x07C", "0x07D", "0x07E", "0x07F", "0x080", "0x081", "0x082", "0x083", "0x084", "0x085", "0x086", "0x087", "0x088", "0x089", "0x08A", "0x08B", "0x08C", "0x08D", "0x08E", "0x08F" ,"0x090", "0x091", "0x092", "0x093", "0x094", "0x095", "0x096", "0x097", "0x098", "0x099", "0x09A", "0x09B", "0x09C", "0x09D", "0x09E", "0x09F", "0x0A0", "0x0A1", "0x0A2", "0x0A3", "0x0A4", "0x0A5", "0x0A6", "0x0A7", "0x0A8", "0x0A9", "0x0AA", "0x0AB", "0x0AC", "0x0AD", "0x0AE", "0x0AF", "0x0B0", "0x0B1", "0x0B2", "0x0B3", "0x0B4", "0x0B5", "0x0B6", "0x0B7", "0x0B8", "0x0B9", "0x0BA", "0x0BB", "0x0BC", "0x0BD", "0x0BE", "0x0BF" ,"0x0C0", "0x0C1", "0x0C2", "0x0C3", "0x0C4", "0x0C5", "0x0C6", "0x0C7", "0x0C8", "0x0C9", "0x0CA", "0x0CB", "0x0CC", "0x0CD", "0x0CE", "0x0CF", "0x0D0", "0x0D1", "0x0D2", "0x0D3", "0x0D4", "0x0D5", "0x0D6", "0x0D7", "0x0D8", "0x0D9", "0x0DA", "0x0DB", "0x0DC", "0x0DD", "0x0DE", "0x0DF", "0x0E0", "0x0E1", "0x0E2", "0x0E3", "0x0E4", "0x0E5", "0x0E6", "0x0E7", "0x0E8", "0x0E9", "0x0EA", "0x0EB", "0x0EC", "0x0ED", "0x0EE", "0x0EF" ,"0x0F0", "0x0F1", "0x0F2", "0x0F3", "0x0F4", "0x0F5", "0x0F6", "0x0F7", "0x0F8", "0x0F9", "0x0FA", "0x0FB", "0x0FC", "0x0FD", "0x0FE", "0x0FF"
 #define CAN_ADDRESS_HEX_01XX = "0x100", "0x101", "0x102", "0x103", "0x104", "0x105", "0x106", "0x107", "0x108", "0x109", "0x10A", "0x10B", "0x10C", "0x10D", "0x10E", "0x10F", "0x110", "0x111", "0x112", "0x113", "0x114", "0x115", "0x116", "0x117", "0x118", "0x119", "0x11A", "0x11B", "0x11C", "0x11D", "0x11E", "0x11F", "0x120", "0x121", "0x122", "0x123", "0x124", "0x125", "0x126", "0x127", "0x128", "0x129", "0x12A", "0x12B", "0x12C", "0x12D", "0x12E", "0x12F", "0x130", "0x131", "0x132", "0x133", "0x134", "0x135", "0x136", "0x137", "0x138", "0x139", "0x13A", "0x13B", "0x13C", "0x13D", "0x13E", "0x13F", "0x140", "0x141", "0x142", "0x143", "0x144", "0x145", "0x146", "0x147", "0x148", "0x149", "0x14A", "0x14B", "0x14C", "0x14D", "0x14E", "0x14F", "0x150", "0x151", "0x152", "0x153", "0x154", "0x155", "0x156", "0x157", "0x158", "0x159", "0x15A", "0x15B", "0x15C", "0x15D", "0x15E", "0x15F" ,"0x160", "0x161", "0x162", "0x163", "0x164", "0x165", "0x166", "0x167", "0x168", "0x169", "0x16A", "0x16B", "0x16C", "0x16D", "0x16E", "0x16F", "0x170", "0x171", "0x172", "0x173", "0x174", "0x175", "0x176", "0x177", "0x178", "0x179", "0x17A", "0x17B", "0x17C", "0x17D", "0x17E", "0x17F", "0x180", "0x181", "0x182", "0x183", "0x184", "0x185", "0x186", "0x187", "0x188", "0x189", "0x18A", "0x18B", "0x18C", "0x18D", "0x18E", "0x18F" ,"0x190", "0x191", "0x192", "0x193", "0x194", "0x195", "0x196", "0x197", "0x198", "0x199", "0x19A", "0x19B", "0x19C", "0x19D", "0x19E", "0x19F", "0x1A0", "0x1A1", "0x1A2", "0x1A3", "0x1A4", "0x1A5", "0x1A6", "0x1A7", "0x1A8", "0x1A9", "0x1AA", "0x1AB", "0x1AC", "0x1AD", "0x1AE", "0x1AF", "0x1B0", "0x1B1", "0x1B2", "0x1B3", "0x1B4", "0x1B5", "0x1B6", "0x1B7", "0x1B8", "0x1B9", "0x1BA", "0x1BB", "0x1BC", "0x1BD", "0x1BE", "0x1BF" ,"0x1C0", "0x1C1", "0x1C2", "0x1C3", "0x1C4", "0x1C5", "0x1C6", "0x1C7", "0x1C8", "0x1C9", "0x1CA", "0x1CB", "0x1CC", "0x1CD", "0x1CE", "0x1CF", "0x1D0", "0x1D1", "0x1D2", "0x1D3", "0x1D4", "0x1D5", "0x1D6", "0x1D7", "0x1D8", "0x1D9", "0x1DA", "0x1DB", "0x1DC", "0x1DD", "0x1DE", "0x1DF", "0x1E0", "0x1E1", "0x1E2", "0x1E3", "0x1E4", "0x1E5", "0x1E6", "0x1E7", "0x1E8", "0x1E9", "0x1EA", "0x1EB", "0x1EC", "0x1ED", "0x1EE", "0x1EF" ,"0x1F0", "0x1F1", "0x1F2", "0x1F3", "0x1F4", "0x1F5", "0x1F6", "0x1F7", "0x1F8", "0x1F9", "0x1FA", "0x1FB", "0x1FC", "0x1FD", "0x1FE", "0x1FF"
 #define CAN_ADDRESS_HEX_02XX = "0x200", "0x201", "0x202", "0x203", "0x204", "0x205", "0x206", "0x207", "0x208", "0x209", "0x20A", "0x20B", "0x20C", "0x20D", "0x20E", "0x20F", "0x210", "0x211", "0x212", "0x213", "0x214", "0x215", "0x216", "0x217", "0x218", "0x219", "0x21A", "0x21B", "0x21C", "0x21D", "0x21E", "0x21F", "0x220", "0x221", "0x222", "0x223", "0x224", "0x225", "0x226", "0x227", "0x228", "0x229", "0x22A", "0x22B", "0x22C", "0x22D", "0x22E", "0x22F", "0x230", "0x231", "0x232", "0x233", "0x234", "0x235", "0x236", "0x237", "0x238", "0x239", "0x23A", "0x23B", "0x23C", "0x23D", "0x23E", "0x23F", "0x240", "0x241", "0x242", "0x243", "0x244", "0x245", "0x246", "0x247", "0x248", "0x249", "0x24A", "0x24B", "0x24C", "0x24D", "0x24E", "0x24F", "0x250", "0x251", "0x252", "0x253", "0x254", "0x255", "0x256", "0x257", "0x258", "0x259", "0x25A", "0x25B", "0x25C", "0x25D", "0x25E", "0x25F" ,"0x260", "0x261", "0x262", "0x263", "0x264", "0x265", "0x266", "0x267", "0x268", "0x269", "0x26A", "0x26B", "0x26C", "0x26D", "0x26E", "0x26F", "0x270", "0x271", "0x272", "0x273", "0x274", "0x275", "0x276", "0x277", "0x278", "0x279", "0x27A", "0x27B", "0x27C", "0x27D", "0x27E", "0x27F", "0x280", "0x281", "0x282", "0x283", "0x284", "0x285", "0x286", "0x287", "0x288", "0x289", "0x28A", "0x28B", "0x28C", "0x28D", "0x28E", "0x28F" ,"0x290", "0x291", "0x292", "0x293", "0x294", "0x295", "0x296", "0x297", "0x298", "0x299", "0x29A", "0x29B", "0x29C", "0x29D", "0x29E", "0x29F", "0x2A0", "0x2A1", "0x2A2", "0x2A3", "0x2A4", "0x2A5", "0x2A6", "0x2A7", "0x2A8", "0x2A9", "0x2AA", "0x2AB", "0x2AC", "0x2AD", "0x2AE", "0x2AF", "0x2B0", "0x2B1", "0x2B2", "0x2B3", "0x2B4", "0x2B5", "0x2B6", "0x2B7", "0x2B8", "0x2B9", "0x2BA", "0x2BB", "0x2BC", "0x2BD", "0x2BE", "0x2BF" ,"0x2C0", "0x2C1", "0x2C2", "0x2C3", "0x2C4", "0x2C5", "0x2C6", "0x2C7", "0x2C8", "0x2C9", "0x2CA", "0x2CB", "0x2CC", "0x2CD", "0x2CE", "0x2CF", "0x2D0", "0x2D1", "0x2D2", "0x2D3", "0x2D4", "0x2D5", "0x2D6", "0x2D7", "0x2D8", "0x2D9", "0x2DA", "0x2DB", "0x2DC", "0x2DD", "0x2DE", "0x2DF", "0x2E0", "0x2E1", "0x2E2", "0x2E3", "0x2E4", "0x2E5", "0x2E6", "0x2E7", "0x2E8", "0x2E9", "0x2EA", "0x2EB", "0x2EC", "0x2ED", "0x2EE", "0x2EF" ,"0x2F0", "0x2F1", "0x2F2", "0x2F3", "0x2F4", "0x2F5", "0x2F6", "0x2F7", "0x2F8", "0x2F9", "0x2FA", "0x2FB", "0x2FC", "0x2FD", "0x2FE", "0x2FF"
 #define CAN_ADDRESS_HEX_03XX = "0x300", "0x301", "0x302", "0x303", "0x304", "0x305", "0x306", "0x307", "0x308", "0x309", "0x30A", "0x30B", "0x30C", "0x30D", "0x30E", "0x30F", "0x310", "0x311", "0x312", "0x313", "0x314", "0x315", "0x316", "0x317", "0x318", "0x319", "0x31A", "0x31B", "0x31C", "0x31D", "0x31E", "0x31F", "0x320", "0x321", "0x322", "0x323", "0x324", "0x325", "0x326", "0x327", "0x328", "0x329", "0x32A", "0x32B", "0x32C", "0x32D", "0x32E", "0x32F", "0x330", "0x331", "0x332", "0x333", "0x334", "0x335", "0x336", "0x337", "0x338", "0x339", "0x33A", "0x33B", "0x33C", "0x33D", "0x33E", "0x33F", "0x340", "0x341", "0x342", "0x343", "0x344", "0x345", "0x346", "0x347", "0x348", "0x349", "0x34A", "0x34B", "0x34C", "0x34D", "0x34E", "0x34F", "0x350", "0x351", "0x352", "0x353", "0x354", "0x355", "0x356", "0x357", "0x358", "0x359", "0x35A", "0x35B", "0x35C", "0x35D", "0x35E", "0x35F" ,"0x360", "0x361", "0x362", "0x363", "0x364", "0x365", "0x366", "0x367", "0x368", "0x369", "0x36A", "0x36B", "0x36C", "0x36D", "0x36E", "0x36F", "0x370", "0x371", "0x372", "0x373", "0x374", "0x375", "0x376", "0x377", "0x378", "0x379", "0x37A", "0x37B", "0x37C", "0x37D", "0x37E", "0x37F", "0x380", "0x381", "0x382", "0x383", "0x384", "0x385", "0x386", "0x387", "0x388", "0x389", "0x38A", "0x38B", "0x38C", "0x38D", "0x38E", "0x38F" ,"0x390", "0x391", "0x392", "0x393", "0x394", "0x395", "0x396", "0x397", "0x398", "0x399", "0x39A", "0x39B", "0x39C", "0x39D", "0x39E", "0x39F", "0x3A0", "0x3A1", "0x3A2", "0x3A3", "0x3A4", "0x3A5", "0x3A6", "0x3A7", "0x3A8", "0x3A9", "0x3AA", "0x3AB", "0x3AC", "0x3AD", "0x3AE", "0x3AF", "0x3B0", "0x3B1", "0x3B2", "0x3B3", "0x3B4", "0x3B5", "0x3B6", "0x3B7", "0x3B8", "0x3B9", "0x3BA", "0x3BB", "0x3BC", "0x3BD", "0x3BE", "0x3BF" ,"0x3C0", "0x3C1", "0x3C2", "0x3C3", "0x3C4", "0x3C5", "0x3C6", "0x3C7", "0x3C8", "0x3C9", "0x3CA", "0x3CB", "0x3CC", "0x3CD", "0x3CE", "0x3CF", "0x3D0", "0x3D1", "0x3D2", "0x3D3", "0x3D4", "0x3D5", "0x3D6", "0x3D7", "0x3D8", "0x3D9", "0x3DA", "0x3DB", "0x3DC", "0x3DD", "0x3DE", "0x3DF", "0x3E0", "0x3E1", "0x3E2", "0x3E3", "0x3E4", "0x3E5", "0x3E6", "0x3E7", "0x3E8", "0x3E9", "0x3EA", "0x3EB", "0x3EC", "0x3ED", "0x3EE", "0x3EF" ,"0x3F0", "0x3F1", "0x3F2", "0x3F3", "0x3F4", "0x3F5", "0x3F6", "0x3F7", "0x3F8", "0x3F9", "0x3FA", "0x3FB", "0x3FC", "0x3FD", "0x3FE", "0x3FF"
 #define CAN_ADDRESS_HEX_04XX = "0x400", "0x401", "0x402", "0x403", "0x404", "0x405", "0x406", "0x407", "0x408", "0x409", "0x40A", "0x40B", "0x40C", "0x40D", "0x40E", "0x40F", "0x410", "0x411", "0x412", "0x413", "0x414", "0x415", "0x416", "0x417", "0x418", "0x419", "0x41A", "0x41B", "0x41C", "0x41D", "0x41E", "0x41F", "0x420", "0x421", "0x422", "0x423", "0x424", "0x425", "0x426", "0x427", "0x428", "0x429", "0x42A", "0x42B", "0x42C", "0x42D", "0x42E", "0x42F", "0x430", "0x431", "0x432", "0x433", "0x434", "0x435", "0x436", "0x437", "0x438", "0x439", "0x43A", "0x43B", "0x43C", "0x43D", "0x43E", "0x43F", "0x440", "0x441", "0x442", "0x443", "0x444", "0x445", "0x446", "0x447", "0x448", "0x449", "0x44A", "0x44B", "0x44C", "0x44D", "0x44E", "0x44F", "0x450", "0x451", "0x452", "0x453", "0x454", "0x455", "0x456", "0x457", "0x458", "0x459", "0x45A", "0x45B", "0x45C", "0x45D", "0x45E", "0x45F" ,"0x460", "0x461", "0x462", "0x463", "0x464", "0x465", "0x466", "0x467", "0x468", "0x469", "0x46A", "0x46B", "0x46C", "0x46D", "0x46E", "0x46F", "0x470", "0x471", "0x472", "0x473", "0x474", "0x475", "0x476", "0x477", "0x478", "0x479", "0x47A", "0x47B", "0x47C", "0x47D", "0x47E", "0x47F", "0x480", "0x481", "0x482", "0x483", "0x484", "0x485", "0x486", "0x487", "0x488", "0x489", "0x48A", "0x48B", "0x48C", "0x48D", "0x48E", "0x48F" ,"0x490", "0x491", "0x492", "0x493", "0x494", "0x495", "0x496", "0x497", "0x498", "0x499", "0x49A", "0x49B", "0x49C", "0x49D", "0x49E", "0x49F", "0x4A0", "0x4A1", "0x4A2", "0x4A3", "0x4A4", "0x4A5", "0x4A6", "0x4A7", "0x4A8", "0x4A9", "0x4AA", "0x4AB", "0x4AC", "0x4AD", "0x4AE", "0x4AF", "0x4B0", "0x4B1", "0x4B2", "0x4B3", "0x4B4", "0x4B5", "0x4B6", "0x4B7", "0x4B8", "0x4B9", "0x4BA", "0x4BB", "0x4BC", "0x4BD", "0x4BE", "0x4BF" ,"0x4C0", "0x4C1", "0x4C2", "0x4C3", "0x4C4", "0x4C5", "0x4C6", "0x4C7", "0x4C8", "0x4C9", "0x4CA", "0x4CB", "0x4CC", "0x4CD", "0x4CE", "0x4CF", "0x4D0", "0x4D1", "0x4D2", "0x4D3", "0x4D4", "0x4D5", "0x4D6", "0x4D7", "0x4D8", "0x4D9", "0x4DA", "0x4DB", "0x4DC", "0x4DD", "0x4DE", "0x4DF", "0x4E0", "0x4E1", "0x4E2", "0x4E3", "0x4E4", "0x4E5", "0x4E6", "0x4E7", "0x4E8", "0x4E9", "0x4EA", "0x4EB", "0x4EC", "0x4ED", "0x4EE", "0x4EF" ,"0x4F0", "0x4F1", "0x4F2", "0x4F3", "0x4F4", "0x4F5", "0x4F6", "0x4F7", "0x4F8", "0x4F9", "0x4FA", "0x4FB", "0x4FC", "0x4FD", "0x4FE", "0x4FF"
 #define CAN_ADDRESS_HEX_05XX = "0x500", "0x501", "0x502", "0x503", "0x504", "0x505", "0x506", "0x507", "0x508", "0x509", "0x50A", "0x50B", "0x50C", "0x50D", "0x50E", "0x50F", "0x510", "0x511", "0x512", "0x513", "0x514", "0x515", "0x516", "0x517", "0x518", "0x519", "0x51A", "0x51B", "0x51C", "0x51D", "0x51E", "0x51F", "0x520", "0x521", "0x522", "0x523", "0x524", "0x525", "0x526", "0x527", "0x528", "0x529", "0x52A", "0x52B", "0x52C", "0x52D", "0x52E", "0x52F", "0x530", "0x531", "0x532", "0x533", "0x534", "0x535", "0x536", "0x537", "0x538", "0x539", "0x53A", "0x53B", "0x53C", "0x53D", "0x53E", "0x53F", "0x540", "0x541", "0x542", "0x543", "0x544", "0x545", "0x546", "0x547", "0x548", "0x549", "0x54A", "0x54B", "0x54C", "0x54D", "0x54E", "0x54F", "0x550", "0x551", "0x552", "0x553", "0x554", "0x555", "0x556", "0x557", "0x558", "0x559", "0x55A", "0x55B", "0x55C", "0x55D", "0x55E", "0x55F" ,"0x560", "0x561", "0x562", "0x563", "0x564", "0x565", "0x566", "0x567", "0x568", "0x569", "0x56A", "0x56B", "0x56C", "0x56D", "0x56E", "0x56F", "0x570", "0x571", "0x572", "0x573", "0x574", "0x575", "0x576", "0x577", "0x578", "0x579", "0x57A", "0x57B", "0x57C", "0x57D", "0x57E", "0x57F", "0x580", "0x581", "0x582", "0x583", "0x584", "0x585", "0x586", "0x587", "0x588", "0x589", "0x58A", "0x58B", "0x58C", "0x58D", "0x58E", "0x58F" ,"0x590", "0x591", "0x592", "0x593", "0x594", "0x595", "0x596", "0x597", "0x598", "0x599", "0x59A", "0x59B", "0x59C", "0x59D", "0x59E", "0x59F", "0x5A0", "0x5A1", "0x5A2", "0x5A3", "0x5A4", "0x5A5", "0x5A6", "0x5A7", "0x5A8", "0x5A9", "0x5AA", "0x5AB", "0x5AC", "0x5AD", "0x5AE", "0x5AF", "0x5B0", "0x5B1", "0x5B2", "0x5B3", "0x5B4", "0x5B5", "0x5B6", "0x5B7", "0x5B8", "0x5B9", "0x5BA", "0x5BB", "0x5BC", "0x5BD", "0x5BE", "0x5BF" ,"0x5C0", "0x5C1", "0x5C2", "0x5C3", "0x5C4", "0x5C5", "0x5C6", "0x5C7", "0x5C8", "0x5C9", "0x5CA", "0x5CB", "0x5CC", "0x5CD", "0x5CE", "0x5CF", "0x5D0", "0x5D1", "0x5D2", "0x5D3", "0x5D4", "0x5D5", "0x5D6", "0x5D7", "0x5D8", "0x5D9", "0x5DA", "0x5DB", "0x5DC", "0x5DD", "0x5DE", "0x5DF", "0x5E0", "0x5E1", "0x5E2", "0x5E3", "0x5E4", "0x5E5", "0x5E6", "0x5E7", "0x5E8", "0x5E9", "0x5EA", "0x5EB", "0x5EC", "0x5ED", "0x5EE", "0x5EF" ,"0x5F0", "0x5F1", "0x5F2", "0x5F3", "0x5F4", "0x5F5", "0x5F6", "0x5F7", "0x5F8", "0x5F9", "0x5FA", "0x5FB", "0x5FC", "0x5FD", "0x5FE", "0x5FF"
 #define CAN_ADDRESS_HEX_06XX = "0x600", "0x601", "0x602", "0x603", "0x604", "0x605", "0x606", "0x607", "0x608", "0x609", "0x60A", "0x60B", "0x60C", "0x60D", "0x60E", "0x60F", "0x610", "0x611", "0x612", "0x613", "0x614", "0x615", "0x616", "0x617", "0x618", "0x619", "0x61A", "0x61B", "0x61C", "0x61D", "0x61E", "0x61F", "0x620", "0x621", "0x622", "0x623", "0x624", "0x625", "0x626", "0x627", "0x628", "0x629", "0x62A", "0x62B", "0x62C", "0x62D", "0x62E", "0x62F", "0x630", "0x631", "0x632", "0x633", "0x634", "0x635", "0x636", "0x637", "0x638", "0x639", "0x63A", "0x63B", "0x63C", "0x63D", "0x63E", "0x63F", "0x640", "0x641", "0x642", "0x643", "0x644", "0x645", "0x646", "0x647", "0x648", "0x649", "0x64A", "0x64B", "0x64C", "0x64D", "0x64E", "0x64F", "0x650", "0x651", "0x652", "0x653", "0x654", "0x655", "0x656", "0x657", "0x658", "0x659", "0x65A", "0x65B", "0x65C", "0x65D", "0x65E", "0x65F" ,"0x660", "0x661", "0x662", "0x663", "0x664", "0x665", "0x666", "0x667", "0x668", "0x669", "0x66A", "0x66B", "0x66C", "0x66D", "0x66E", "0x66F", "0x670", "0x671", "0x672", "0x673", "0x674", "0x675", "0x676", "0x677", "0x678", "0x679", "0x67A", "0x67B", "0x67C", "0x67D", "0x67E", "0x67F", "0x680", "0x681", "0x682", "0x683", "0x684", "0x685", "0x686", "0x687", "0x688", "0x689", "0x68A", "0x68B", "0x68C", "0x68D", "0x68E", "0x68F" ,"0x690", "0x691", "0x692", "0x693", "0x694", "0x695", "0x696", "0x697", "0x698", "0x699", "0x69A", "0x69B", "0x69C", "0x69D", "0x69E", "0x69F", "0x6A0", "0x6A1", "0x6A2", "0x6A3", "0x6A4", "0x6A5", "0x6A6", "0x6A7", "0x6A8", "0x6A9", "0x6AA", "0x6AB", "0x6AC", "0x6AD", "0x6AE", "0x6AF", "0x6B0", "0x6B1", "0x6B2", "0x6B3", "0x6B4", "0x6B5", "0x6B6", "0x6B7", "0x6B8", "0x6B9", "0x6BA", "0x6BB", "0x6BC", "0x6BD", "0x6BE", "0x6BF" ,"0x6C0", "0x6C1", "0x6C2", "0x6C3", "0x6C4", "0x6C5", "0x6C6", "0x6C7", "0x6C8", "0x6C9", "0x6CA", "0x6CB", "0x6CC", "0x6CD", "0x6CE", "0x6CF", "0x6D0", "0x6D1", "0x6D2", "0x6D3", "0x6D4", "0x6D5", "0x6D6", "0x6D7", "0x6D8", "0x6D9", "0x6DA", "0x6DB", "0x6DC", "0x6DD", "0x6DE", "0x6DF", "0x6E0", "0x6E1", "0x6E2", "0x6E3", "0x6E4", "0x6E5", "0x6E6", "0x6E7", "0x6E8", "0x6E9", "0x6EA", "0x6EB", "0x6EC", "0x6ED", "0x6EE", "0x6EF" ,"0x6F0", "0x6F1", "0x6F2", "0x6F3", "0x6F4", "0x6F5", "0x6F6", "0x6F7", "0x6F8", "0x6F9", "0x6FA", "0x6FB", "0x6FC", "0x6FD", "0x6FE", "0x6FF"
 #define CAN_ADDRESS_HEX_07XX = "0x700", "0x701", "0x702", "0x703", "0x704", "0x705", "0x706", "0x707", "0x708", "0x709", "0x70A", "0x70B", "0x70C", "0x70D", "0x70E", "0x70F", "0x710", "0x711", "0x712", "0x713", "0x714", "0x715", "0x716", "0x717", "0x718", "0x719", "0x71A", "0x71B", "0x71C", "0x71D", "0x71E", "0x71F", "0x720", "0x721", "0x722", "0x723", "0x724", "0x725", "0x726", "0x727", "0x728", "0x729", "0x72A", "0x72B", "0x72C", "0x72D", "0x72E", "0x72F", "0x730", "0x731", "0x732", "0x733", "0x734", "0x735", "0x736", "0x737", "0x738", "0x739", "0x73A", "0x73B", "0x73C", "0x73D", "0x73E", "0x73F", "0x740", "0x741", "0x742", "0x743", "0x744", "0x745", "0x746", "0x747", "0x748", "0x749", "0x74A", "0x74B", "0x74C", "0x74D", "0x74E", "0x74F", "0x750", "0x751", "0x752", "0x753", "0x754", "0x755", "0x756", "0x757", "0x758", "0x759", "0x75A", "0x75B", "0x75C", "0x75D", "0x75E", "0x75F" ,"0x760", "0x761", "0x762", "0x763", "0x764", "0x765", "0x766", "0x767", "0x768", "0x769", "0x76A", "0x76B", "0x76C", "0x76D", "0x76E", "0x76F", "0x770", "0x771", "0x772", "0x773", "0x774", "0x775", "0x776", "0x777", "0x778", "0x779", "0x77A", "0x77B", "0x77C", "0x77D", "0x77E", "0x77F", "0x780", "0x781", "0x782", "0x783", "0x784", "0x785", "0x786", "0x787", "0x788", "0x789", "0x78A", "0x78B", "0x78C", "0x78D", "0x78E", "0x78F" ,"0x790", "0x791", "0x792", "0x793", "0x794", "0x795", "0x796", "0x797", "0x798", "0x799", "0x79A", "0x79B", "0x79C", "0x79D", "0x79E", "0x79F", "0x7A0", "0x7A1", "0x7A2", "0x7A3", "0x7A4", "0x7A5", "0x7A6", "0x7A7", "0x7A8", "0x7A9", "0x7AA", "0x7AB", "0x7AC", "0x7AD", "0x7AE", "0x7AF", "0x7B0", "0x7B1", "0x7B2", "0x7B3", "0x7B4", "0x7B5", "0x7B6", "0x7B7", "0x7B8", "0x7B9", "0x7BA", "0x7BB", "0x7BC", "0x7BD", "0x7BE", "0x7BF" ,"0x7C0", "0x7C1", "0x7C2", "0x7C3", "0x7C4", "0x7C5", "0x7C6", "0x7C7", "0x7C8", "0x7C9", "0x7CA", "0x7CB", "0x7CC", "0x7CD", "0x7CE", "0x7CF", "0x7D0", "0x7D1", "0x7D2", "0x7D3", "0x7D4", "0x7D5", "0x7D6", "0x7D7", "0x7D8", "0x7D9", "0x7DA", "0x7DB", "0x7DC", "0x7DD", "0x7DE", "0x7DF", "0x7E0", "0x7E1", "0x7E2", "0x7E3", "0x7E4", "0x7E5", "0x7E6", "0x7E7", "0x7E8", "0x7E9", "0x7EA", "0x7EB", "0x7EC", "0x7ED", "0x7EE", "0x7EF" ,"0x7F0", "0x7F1", "0x7F2", "0x7F3", "0x7F4", "0x7F5", "0x7F6", "0x7F7", "0x7F8", "0x7F9", "0x7FA", "0x7FB", "0x7FC", "0x7FD", "0x7FE", "0x7FF" 
 #define CAN_ADDRESS_HEX = $CAN_ADDRESS_HEX_00XX, $CAN_ADDRESS_HEX_01XX, $CAN_ADDRESS_HEX_02XX, $CAN_ADDRESS_HEX_03XX, $CAN_ADDRESS_HEX_04XX, $CAN_ADDRESS_HEX_05XX, $CAN_ADDRESS_HEX_06XX, $CAN_ADDRESS_HEX_07XX


; PAGES of EEPROM are defined below. The definition must match exactly what is defined in the Arduino code for each page
; Reccomended practice is to keep the variable names the same. Use nextOffset and lastOffset, then comparing the variable listing in the globals.h file with this will ensure the correct mapping.

 ;Page 1 is main settings. 128 bytes
page = 1
  ;  name                 = bits,   type,    offset, bits  ;comments
  ;  name                 = array,  type,    offset, shape, units,     scale, translate,    lo,      hi,       digits   ;comments
  ;  name                 = scalar, type,    offset,        units,     scale, translate,    lo,      hi,       digits   ;comments

  page1ActualSize        = scalar,   U16,    0,             "",        1.0,   0.0,          0.0,     65535.00,     0  ;TS READ ONLY
  page1CRC               = scalar,   U32,    2,             "",        1.0,   0.0,          0.0,     65535.00,     0  ;TS READ ONLY
  ochBlockSizeSent       = scalar,   U08,    6,             "",        1.0,   0.0,          0.0,     255.00,       0  ;TS READ ONLY
  
  can0enable           	 = bits,   U08,    7,     [0:0],   "Disable","Enable"
  can0Baud               = bits,   U08,    7,     [1:4],   $CAN_Baud_list
  can0XTalFreq           = bits,   U08,    7,     [5:6],   $CAN_Freq_list
  unused1_7_bits         = bits,   U08,    7,     [7:7]
  can0RXIntPin           = bits,   U08,    8,     [0:5],   $Digital_Pins_List
  unused1_8_bits         = bits,   U08,    8,     [6:7]

  analogSelectorPin      = bits,   U08,    9,     [0:3],   $Analog_Pins_List
  analogSelectorEn       = bits,   U08,    9,     [4:4],   "Disable","Enable"
  
  allowHWTestMode        = bits,   U08,    9,     [5:5],   "Disable","Enable"
  allowEEPROMClear       = bits,   U08,    9,     [6:6],   "Disable","Enable"
  unused1_9_bits         = bits,   U08,    9,     [7:7]
  
  canRXmsg_MotecPLM      = bits,   U16,    10,    [0:10]   $CAN_ADDRESS_HEX


;-------------------------------------------------------------------------------
 ;Page 2. 374 bytes, Page 2 is demonstrating the use of nextOffset and lastOffset to automatically map the page.
page = 2
  ;  name                 = bits,   type,    offset, bits  ;comments
  ;  name                 = array,  type,    offset, shape, units,     scale, translate,    lo,      hi,       digits   ;comments
  ;  name                 = scalar, type,    offset,        units,     scale, translate,    lo,      hi,       digits   ;comments
  page2ActualSize        = scalar,   U16,    0,             "",        1.0,   0.0,          0.0,     65535.00,     0  ;TS READ ONLY
  page2CRC               = scalar,   U32,    nextOffset,    "",        1.0,   0.0,          0.0,     65535.00,     0  ;TS READ ONLY
  
  ; Examples below here, can be removed for your project
  exampleTable_Xaxis     = array,  U08,    nextOffset,  [    8],  "",   1.00000,   0.00000,   0.00,    255.00,     0
  exampleTable_Ydata     = array,  U08,    nextOffset,  [    8],  "",   1.00000,   0.00000,   0.00,    255.00,     0
  exampleLookupValue     = scalar,   U08,  nextOffset,  "",   1.00000,   0.00000,   0.00,    255.00,     0
  
  Ke_i_TestValue         = scalar,  U16, 	 nextOffset, 	         "",      1,      0,      0,  65000,      0
  Kf_i_TestFloat1        = scalar,  F32,   nextOffset, 	         "",      1,      0,      -100000,  100000,     2
  Kf_i_TestFloat2        = scalar,  F32,   nextOffset, 	         "",      1,      0,      -100000,  100000,     2
  
  example3DTable_Xaxis   = array,  U08,    nextOffset,  [    8],  "",   1.00000,   0.00000,   0.00,    255.00,     0
  example3DTable_Yaxis   = array,  U08,    nextOffset,  [    4],  "",   1.00000,   0.00000,   0.00,    255.00,     0
  example3DTable_Zdata   = array,  U08,    nextOffset,    [8x4],  "val",   1.00000,   0.00000,   0.00,    255.00,     0, X-order
  example3DXLookup       = scalar, U08,    nextOffset,  "",   1.00000,   0.00000,   0.00,    255.00,     0
  example3DYLookup       = scalar, U08,    nextOffset,  "",   1.00000,   0.00000,   0.00,    255.00,     0
   
  ;unused2_17_356         = array,  U08,    nextOffset,  [  355],  "",   1.00000,   0.00000,   0.00,    255.00,     0

;-------------------------------------------------------------------------------
 ;Page 3. 512 bytes, this is the last of the pages for devices with only 1kb eeprom (arduino Uno)
page = 3
  ;  name                 = bits,   type,    offset, bits  ;comments
  ;  name                 = array,  type,    offset, shape, units,     scale, translate,    lo,      hi,       digits   ;comments
  ;  name                 = scalar, type,    offset,        units,     scale, translate,    lo,      hi,       digits   ;comments
  page3ActualSize        = scalar,   U16,    0,             "",        1.0,   0.0,          0.0,     65535.00,     0  ;TS READ ONLY
  page3CRC               = scalar,   U32,    nextOffset,    "",        1.0,   0.0,          0.0,     65535.00,     0  ;TS READ ONLY


#if EEPROM_SIZE_8KB
;-------------------------------------------------------------------------------
 ;Page 4. 512 bytes
page = 4
  ;  name                 = bits,   type,    offset, bits  ;comments
  ;  name                 = array,  type,    offset, shape, units,     scale, translate,    lo,      hi,       digits   ;comments
  ;  name                 = scalar, type,    offset,        units,     scale, translate,    lo,      hi,       digits   ;comments
  page4ActualSize        = scalar,   U16,    0,             "",        1.0,   0.0,          0.0,     65535.00,     0  ;TS READ ONLY
  page4CRC               = scalar,   U32,    nextOffset,    "",        1.0,   0.0,          0.0,     65535.00,     0  ;TS READ ONLY

;---------------------------------------------------------------------------------

 ;Page 5. 512bytes
page = 5
  ;  name                 = bits,   type,    offset, bits  ;comments
  ;  name                 = array,  type,    offset, shape, units,     scale, translate,    lo,      hi,       digits   ;comments
  ;  name                 = scalar, type,    offset,        units,     scale, translate,    lo,      hi,       digits   ;comments
  page5ActualSize        = scalar,   U16,    0,             "",        1.0,   0.0,          0.0,     65535.00,     0  ;TS READ ONLY
  page5CRC               = scalar,   U32,    nextOffset,    "",        1.0,   0.0,          0.0,     65535.00,     0  ;TS READ ONLY


;---------------------------------------------------------------------------------
#endif

[ConstantsExtensions]

; requiresPowerCycle = constant The constant will be monitored for any user changes. If changed, a notification “Powercycle Required” will be displayed on the dashboard. Normally used with any constant that requires the Controller to be rebooted for the change to take effect.
	 requiresPowerCycle = can0RXIntPin
   requiresPowerCycle = analogSelectorPin
   requiresPowerCycle = analogSelectorEn
   
;defaultValue = constant If this constant or PcVariable has never been initialized. Once initialized or changed by the user, what ever value they set will be used going forward. However, in a case where the PcVariable or Constant is flagged noMsqSave, this value will always be used.
   defaultValue = Ke_i_TestValue,   -15

;readOnly = constant The Constant or PcVariable is marked as a readOnly entity where the controller value or defaultValue will always drive the value. Values will not be loaded from Calibration Files or editable in the UI.
   readOnly = page1CRC
   controllerPriority = page1ActualSize
   readOnly = page1ActualSize
   controllerPriority = ochBlockSizeSent
   readOnly = ochBlockSizeSent
      
   readOnly = page2CRC
   controllerPriority = page2ActualSize
   readOnly = page2ActualSize
   
   readOnly = page3CRC
   controllerPriority = page3ActualSize
   readOnly = page3ActualSize
   
#if EEPROM_SIZE_8KB
   readOnly = page4CRC
   controllerPriority = page4ActualSize
   readOnly = page4ActualSize
   
   readOnly = page5CRC
   controllerPriority = page5ActualSize
   readOnly = page5ActualSize
#endif
   
; maintainConstantValue = someConstantName, { some expression resolving to the desired value} the targetConstant value will always be set to the result of the expression. Each component of the expression is monitored to change to trigger an update to the constant.


[Menu]

   ;----------------------------------------------------------------------------
   ;  There are five pre-defined values that may be used to define your menus.
   ;  The first four allow access to the "standard" dialog boxes, the last one
   ;  merely draws a separator (horizontal line) in the menu.
   ;
   ;     std_constants
   ;     std_enrichments
   ;     std_realtime
   ;     std_warmup
   ;
   ;     std_separator
   ;
   ;  If you use any of the std_constants, std_enrichments or std_warmup
   ;  editors, they may be optionally suffixed with a page number (only
   ;  useful for multi-page code variants), which causes them to edit the
   ;  specified page.  If you leave off the page specifier, they edit logical
   ;  page one as specified in the Constants section.
   ;
   ;  There are four special menu names, which when used append to the standard
   ;  menus of the same name instead of creating a new one.  The menu names
   ;  are "File", "Communications", "Tools" and "Help".
   ;
   ;----------------------------------------------------------------------------

menuDialog = main

   menu = "Settings"
      subMenu = DI_systemInfo1,  "System Info"
      subMenu = DI_config1,      "Device Configuration"
        subMenu = std_separator
      subMenu = DI_ExampleTable,       "Example Table"
      subMenu = DI_Example3DTable,     "Example 3D Table"
      subMenu = DI_Testvariables,      "Test Variables"

#if FAST_COMMS 
   menuDialog = main
	  menu = "Hardware Testing"
    subMenu = DI_portstatus, "View Digital I/O"
    subMenu = DI_analogstatus, "View Analog Inputs"
		subMenu = DI_outputtest1, "Test Ports"
#endif

		menu = "Help"
        subMenu = helpGeneral,     "Speeduino Help"
;-------------------------------------------------------------------------------

[SettingContextHelp]
; constantName = "Help Text"
; tool tips tooltips
; These provide the context help in the dialog when these variables are used

;VariableName = "DESCRIPTION"

ochBlockSizeSent = "Uses one byte of page 1 memory to automatically calculate and send the required size of ochBlockSize parameter. Usefull for debugging coms issues."
exampleLookupValue = "the number placed in here will be looked up on the X-axis of the Example lookup table. The result is shown in dev4."


[UserDefined]

; Enhanced TunerStudio dialogs can be defined here
; MegaTune will over look this section
; These dialogs will over-ride those in the UserDefined Section
; User defined ar loaded first, then if one by the same name is defiend here,
; it will replace the MegaTune definition

; dialog = name,   Title, Layout
;
; valid options for layout are xAxis, yAxis, border
; for an xAxis, each field added will be added from right to left
; A yAxis layout will add fields from top to bottom
; A border layout will expect an additional constraint to determine placement
; valid border constraints are north, South, East, West, Center
; all 5 do not need to be filled.

; The field name can be either a constant reference, or a reference to another
; dialog which will be added.
; dialogs can be nested and can be mixed with fields

; naming convention: IP = indicator panel, DI = dialog, CV = curve, TB = table.

  dialog = DI_config1, "Device Configuration"
    field = "CAN 0 Configuration"
    field = "CAN 0 Enable", can0enable
    field = "CAN 0 Baud Rate", can0Baud
    field = "CAN 0 MCP2515 Crystal Frequency", can0XTalFreq
    field = "CAN 0 MCP2515 Input Interrupt Pin", can0RXIntPin
    field = "Motec PLM Rx Msg Address", canRXmsg_MotecPLM


  dialog = DI_Testvariables, "Testing Variables"
    field = "Ke_i_TestValue", Ke_i_TestValue
    field = "Kf_i_TestFloat1", Kf_i_TestFloat1
    field = "Kf_i_TestFloat2", Kf_i_TestFloat2
    field = ""
    field = "Enable analog selector pin", analogSelectorEn
    field = "analog selector pin", analogSelectorPin { analogSelectorEn }


  dialog = DI_ExampleTable, "Example table"
    field = "X axis lookup value", exampleLookupValue
    field = "Z Output is shown in Dev4"
    panel = ExampleTableCurve

  dialog = DI_Example3DTableNorth , xAxis
    field = "X axis lookup value", example3DXLookup
    field = "Y axis lookup value", example3DYLookup
    field = "Z Output is shown in Dev3"
  
  dialog = DI_Example3DTableSouth
    panel = example3DTbl
    
  dialog = DI_Example3DTable, "Example 3D table", yAxis
    panel = DI_Example3DTableNorth
    panel = DI_Example3DTableSouth
  
  dialog = DI_SysMem, "Memory", yAxis
    field = "#Use these variables to assist development"
    displayOnlyField = "ochBlockSizeSent", ochBlockSizeSent
    displayOnlyField = "page1ActualSize", page1ActualSize
    displayOnlyField = "page2ActualSize", page2ActualSize
    displayOnlyField = "page3ActualSize", page3ActualSize
#if EEPROM_SIZE_8KB
    displayOnlyField = "page4ActualSize", page4ActualSize
    displayOnlyField = "page5ActualSize", page5ActualSize
#endif
    
  dialog = DI_SysCRC, "EEPROM CRC", yAxis
    field = "#Not implemented yet"
    displayOnlyField = "page1CRC", page1CRC
    displayOnlyField = "page2CRC", page2CRC
    displayOnlyField = "page3CRC", page3CRC
#if EEPROM_SIZE_8KB
    displayOnlyField = "page4CRC", page4CRC
    displayOnlyField = "page5CRC", page5CRC
#endif
    
  dialog = DI_EEPROMCtrl, "Serial Cmd Lockouts", yAxis
    field = "#These settings saved in the EEPROM prevent unintended operation of serial commands"
    radio = horizontal, "Allow Hardware Test Commands", allowHWTestMode
    radio = horizontal, "Allow EEPROM Clear Commands", allowEEPROMClear
    field = "!WARNING, this will overwrite all EEPROM to 0x00", {allowEEPROMClear}
    commandButton = "Clear EEPROM", cmdClearEEPROM, {allowEEPROMClear}
    commandButton = "Re-Initalise", cmdReInit, {allowHWTestMode}
  
  dialog = DI_systemInfo2, "System Information", xAxis
    panel = DI_SysMem
    panel = DI_SysCRC
    
  dialog = DI_systemInfo1, "System Settings", yAxis
    panel = DI_systemInfo2
    panel = DI_EEPROMCtrl
  
  

  indicatorPanel = IP_digitalPorts, 16
   indicator = { digitalport0 }, "0L", "0H", lightGray, black, green, black
   indicator = { digitalport1 }, "1L", "1H", lightGray, black, green, black
   indicator = { digitalport2 }, "2L", "2H", lightGray, black, green, black
   indicator = { digitalport3 }, "3L", "3H", lightGray, black, green, black
   indicator = { digitalport4 }, "4L", "4H", lightGray, black, green, black
   indicator = { digitalport5 }, "5L", "5H", lightGray, black, green, black
   indicator = { digitalport6 }, "6L", "6H", lightGray, black, green, black
   indicator = { digitalport7 }, "7L", "7H", lightGray, black, green, black
   indicator = { digitalport8 }, "8L", "8H", lightGray, black, green, black
   indicator = { digitalport9 }, "9L", "9H", lightGray, black, green, black
   indicator = { digitalport10}, "10L","10H", lightGray, black, green, black
   indicator = { digitalport11 },"11L","11H", lightGray, black, green, black
   indicator = { digitalport12 },"12L","12H", lightGray, black, green, black
   indicator = { digitalport13 },"13L","13H", lightGray, black, green, black
   indicator = { digitalport14 },"14L","14H", lightGray, black, green, black
   indicator = { digitalport15 },"15L","15H", lightGray, black, green, black
   indicator = { digitalport16 },"16L","16H", lightGray, black, green, black
   indicator = { digitalport17 },"17L","17H", lightGray, black, green, black
   indicator = { digitalport18 },"18L","18H", lightGray, black, green, black
   indicator = { digitalport19 },"19L","19H", lightGray, black, green, black
   indicator = { digitalport20 },"20L","20H", lightGray, black, green, black
   indicator = { digitalport21 },"21L","21H", lightGray, black, green, black
   indicator = { digitalport22 },"22L","22H", lightGray, black, green, black
   indicator = { digitalport23 },"23L","23H", lightGray, black, green, black
   indicator = { digitalport24 },"24L","24H", lightGray, black, green, black
   indicator = { digitalport25 },"25L","25H", lightGray, black, green, black
   indicator = { digitalport26 },"26L","26H", lightGray, black, green, black
   indicator = { digitalport27 },"27L","27H", lightGray, black, green, black
   indicator = { digitalport28 },"28L","28H", lightGray, black, green, black
   indicator = { digitalport29 },"29L","29H", lightGray, black, green, black
   indicator = { digitalport30 },"30L","30H", lightGray, black, green, black
   indicator = { digitalport31 },"31L","31H", lightGray, black, green, black
   indicator = { digitalport32 },"32L","32H", lightGray, black, green, black
   indicator = { digitalport33 },"33L","33H", lightGray, black, green, black
   indicator = { digitalport34 },"34L","34H", lightGray, black, green, black
   indicator = { digitalport35 },"35L","35H", lightGray, black, green, black
   indicator = { digitalport36 },"36L","36H", lightGray, black, green, black
   indicator = { digitalport37 },"37L","37H", lightGray, black, green, black
   indicator = { digitalport38 },"38L","38H", lightGray, black, green, black
   indicator = { digitalport39 },"39L","39H", lightGray, black, green, black
   indicator = { digitalport40 },"40L","40H", lightGray, black, green, black
   indicator = { digitalport41 },"41L","41H", lightGray, black, green, black
   indicator = { digitalport42 },"42L","42H", lightGray, black, green, black
   indicator = { digitalport43 },"43L","43H", lightGray, black, green, black
   indicator = { digitalport44 },"44L","44H", lightGray, black, green, black
   indicator = { digitalport45 },"45L","45H", lightGray, black, green, black
   indicator = { digitalport46 },"46L","46H", lightGray, black, green, black
   indicator = { digitalport47 },"47L","47H", lightGray, black, green, black
   indicator = { digitalport48 },"48L","48H", lightGray, black, green, black
   indicator = { digitalport49 },"49L","49H", lightGray, black, green, black
   indicator = { digitalport50 },"50L","50H", lightGray, black, green, black
   indicator = { digitalport51 },"51L","51H", lightGray, black, green, black
   indicator = { digitalport52 },"52L","52H", lightGray, black, green, black
   indicator = { digitalport53 },"53L","53H", lightGray, black, green, black
   indicator = { digitalport54 },"54L","54H", lightGray, black, green, black
   indicator = { digitalport55 },"55L","55H", lightGray, black, green, black
   indicator = { digitalport56 },"56L","56H", lightGray, black, green, black
   indicator = { digitalport57 },"57L","57H", lightGray, black, green, black
   indicator = { digitalport58 },"58L","58H", lightGray, black, green, black
   indicator = { digitalport59 },"59L","59H", lightGray, black, green, black
   indicator = { digitalport60 },"60L","60H", lightGray, black, green, black
   indicator = { digitalport61 },"61L","61H", lightGray, black, green, black
   indicator = { digitalport62 },"62L","62H", lightGray, black, green, black
   indicator = { digitalport63 },"63L","63H", lightGray, black, green, black

 dialog = DI_portstatus, "Digital I/O", border
   panel = IP_digitalPorts, Center


  dialog = DI_AnalogADCs_0_3, "ADC 0-3"
    liveGraph = LG_AnalogADCs_a, "ADC 0-3"
      ;graphLine = Channel,units, min, max, autoMin, autoMax
      graphLine = Ain0, "ADC", 0, 1023  
      graphLine = Ain1, "ADC", 0, 1023 
      graphLine = Ain2, "ADC", 0, 1023
      graphLine = Ain3, "ADC", 0, 1023

  dialog = DI_AnalogADCs_4_7, "ADC 4-7"
    liveGraph = LG_AnalogADCs_b, "ADC Graph"
      ;graphLine = Channel,units, min, max, autoMin, autoMax
      graphLine = Ain4, "ADC", 0, 1023  
      graphLine = Ain5, "ADC", 0, 1023 
      graphLine = Ain6, "ADC", 0, 1023
      graphLine = Ain7, "ADC", 0, 1023

  dialog = DI_AnalogADCs_8_11, "ADC 8-11"
    liveGraph = LG_AnalogADCs_c, "ADC Graph"
      ;graphLine = Channel,units, min, max, autoMin, autoMax
      graphLine = Ain8, "ADC", 0, 1023  
      graphLine = Ain9, "ADC", 0, 1023 
      graphLine = Ain10, "ADC", 0, 1023
      graphLine = Ain11, "ADC", 0, 1023 

  dialog = DI_AnalogADCs_12_15, "ADC 12-15"
    liveGraph = LG_AnalogADCs_d, "ADC Graph"
      ;graphLine = Channel,units, min, max, autoMin, autoMax
      graphLine = Ain12, "ADC", 0, 1023  
      graphLine = Ain13, "ADC", 0, 1023 
      graphLine = Ain14, "ADC", 0, 1023
      graphLine = Ain15, "ADC", 0, 1023    

  dialog = DI_analogs_West, "", yAxis
    panel = DI_AnalogADCs_0_3
    panel = DI_AnalogADCs_4_7  

  dialog = DI_analogs_East, "", yAxis
    panel = DI_AnalogADCs_8_11
    panel = DI_AnalogADCs_12_15      
   
  dialog = DI_analogstatus, "Analog Ports", xAxis
    ;liveGraph = graphName, “Graph Title”, layoutPlacement
    panel = DI_analogs_West
    panel = DI_analogs_East
  
  
	dialog = blank1 , ""
		field = ""

  dialog = test_warningmessage, ""
    field = "!WARNING! USE AT YOUR OWN RISK. INCORRECT USE WILL DAMAGE YOUR HARDWARE!"
    field = "Port settings are free to change until set by the user individually."
    field = "This function does not override the existing configuration of a port as an input or output as an output. Some ports are used for other functions such as serial."
    field = "Input and output settings are set in the controller software."

	dialog = enabletestbuttons, "Enable Test Controls", xAxis
		;commandButton = "Label Text", command, { Enabled Condition }, optionalFlags

		; The rem > 0 expression is just for testing.. It works when the arduino is on the Stim with rpm.
		; a status bit there would be the expected real expression
		commandButton = "Enable Test Mode", cmdEnableTestMode,{!testactive & allowHWTestMode}

		; if clickOnCloseIfEnabled is set, then the command assigned to this button will be run on the
		; dialog close, but only if the enable condition is true
		; valid click flags are:
		; clickOnCloseIfEnabled - the command will be sent on dialog close if active condition is true
		; clickOnCloseIfDisabled - the command will be sent on dialog close if active condition is false
		; clickOnClose - the command will be sent on dialog close always
		commandButton = "Stop Test Mode", cmdStopTestMode,{testactive & allowHWTestMode}, clickOnCloseIfEnabled

	dialog = DI_portTestOut0, "CH0", yAxis
            commandButton = "Off", cmdtestout0off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout0on,{testactive}
	dialog = DI_portTestOut1, "CH1", yAxis
            commandButton = "Off", cmdtestout1off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout1on,{testactive}
    dialog = DI_portTestOut2, "CH2", yAxis
            commandButton = "Off", cmdtestout2off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout2on,{testactive}
    dialog = DI_portTestOut3, "CH3", yAxis
            commandButton = "Off", cmdtestout3off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout3on,{testactive}
    dialog = DI_portTestOut4, "CH4", yAxis
            commandButton = "Off", cmdtestout4off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout4on	,{testactive}
	dialog = DI_portTestOut5, "CH5", yAxis
            commandButton = "Off", cmdtestout5off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout5on,{testactive}
    dialog = DI_portTestOut6, "CH6", yAxis
            commandButton = "Off", cmdtestout6off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout6on,{testactive}
    dialog = DI_portTestOut7, "CH7", yAxis
            commandButton = "Off", cmdtestout7off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout7on,{testactive}
    dialog = DI_portTestOut8, "CH8", yAxis
            commandButton = "Off", cmdtestout8off,{testactive }
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout8on	,{testactive}
	dialog = DI_portTestOut9, "CH9", yAxis
            commandButton = "Off", cmdtestout9off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout9on,{testactive}
    dialog = DI_portTestOut10, "CH10", yAxis
            commandButton = "Off", cmdtestout10off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout10on,{testactive}
    dialog = DI_portTestOut11, "CH11", yAxis
            commandButton = "Off", cmdtestout11off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout11on,{testactive}
    dialog = DI_portTestOut12, "CH12", yAxis
            commandButton = "Off", cmdtestout12off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout12on,{testactive}
	dialog = DI_portTestOut13, "CH13", yAxis
            commandButton = "Off", cmdtestout13off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout13on,{testactive}
    dialog = DI_portTestOut14, "CH14", yAxis
            commandButton = "Off", cmdtestout14off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout14on,{testactive}
    dialog = DI_portTestOut15, "CH15", yAxis
            commandButton = "Off", cmdtestout15off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout15on,{testactive}
    dialog = DI_portTestOut16, "CH16", yAxis
            commandButton = "Off", cmdtestout16off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout16on,{testactive}
	dialog = DI_portTestOut17, "CH17", yAxis
            commandButton = "Off", cmdtestout17off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout17on,{testactive}
    dialog = DI_portTestOut18, "CH18", yAxis
            commandButton = "Off", cmdtestout18off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout18on,{testactive}
    dialog = DI_portTestOut19, "CH19", yAxis
            commandButton = "Off", cmdtestout19off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout19on,{testactive}
    dialog = DI_portTestOut20, "CH20", yAxis
            commandButton = "Off", cmdtestout20off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout20on	,{testactive}
	dialog = DI_portTestOut21, "CH21", yAxis
            commandButton = "Off", cmdtestout21off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout21on,{testactive}
    dialog = DI_portTestOut22, "CH22", yAxis
            commandButton = "Off", cmdtestout22off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout22on,{testactive}
    dialog = DI_portTestOut23, "CH23", yAxis
            commandButton = "Off", cmdtestout23off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout23on,{testactive}
    dialog = DI_portTestOut24, "CH24", yAxis
            commandButton = "Off", cmdtestout24off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout24on	,{testactive}
	dialog = DI_portTestOut25, "CH25", yAxis
            commandButton = "Off", cmdtestout25off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout25on,{testactive}
    dialog = DI_portTestOut26, "CH26", yAxis
            commandButton = "Off", cmdtestout26off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout26on,{testactive}
    dialog = DI_portTestOut27, "CH27", yAxis
            commandButton = "Off", cmdtestout27off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout27on,{testactive}
    dialog = DI_portTestOut28, "CH28", yAxis
            commandButton = "Off", cmdtestout28off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout28on,{testactive}
	dialog = DI_portTestOut29, "CH29", yAxis
            commandButton = "Off", cmdtestout29off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout29on,{testactive}
    dialog = DI_portTestOut30, "CH30", yAxis
            commandButton = "Off", cmdtestout30off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout30on,{testactive}
    dialog = DI_portTestOut31, "CH31", yAxis
            commandButton = "Off", cmdtestout31off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout31on,{testactive}

	dialog = DI_portTestOut32, "CH32", yAxis
            commandButton = "Off", cmdtestout32off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout32on,{testactive}
	dialog = DI_portTestOut33, "CH33", yAxis
            commandButton = "Off", cmdtestout33off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout33on,{testactive}
    dialog = DI_portTestOut34, "CH34", yAxis
            commandButton = "Off", cmdtestout34off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout34on,{testactive}
    dialog = DI_portTestOut35, "CH35", yAxis
            commandButton = "Off", cmdtestout35off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout35on,{testactive}
    dialog = DI_portTestOut36, "CH36", yAxis
            commandButton = "Off", cmdtestout36off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout37on	,{testactive}
	dialog = DI_portTestOut37, "CH37", yAxis
            commandButton = "Off", cmdtestout37off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout38on,{testactive}
    dialog = DI_portTestOut38, "CH38", yAxis
            commandButton = "Off", cmdtestout38off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout6on,{testactive}
    dialog = DI_portTestOut39, "CH39", yAxis
            commandButton = "Off", cmdtestout39off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout39on,{testactive}
    dialog = DI_portTestOut40, "CH40", yAxis
            commandButton = "Off", cmdtestout40off,{testactive }
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout40on	,{testactive}
	dialog = DI_portTestOut41, "CH41", yAxis
            commandButton = "Off", cmdtestout41off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout41on,{testactive}
    dialog = DI_portTestOut42, "CH42", yAxis
            commandButton = "Off", cmdtestout42off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout42on,{testactive}
    dialog = DI_portTestOut43, "CH43", yAxis
            commandButton = "Off", cmdtestout11off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout43on,{testactive}
    dialog = DI_portTestOut44, "CH44", yAxis
            commandButton = "Off", cmdtestout44off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout45on,{testactive}
	dialog = DI_portTestOut45, "CH45", yAxis
            commandButton = "Off", cmdtestout45off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout45on,{testactive}
    dialog = DI_portTestOut46, "CH46", yAxis
            commandButton = "Off", cmdtestout46off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout46on,{testactive}
    dialog = DI_portTestOut47, "CH47", yAxis
            commandButton = "Off", cmdtestout47off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout47on,{testactive}
    dialog = DI_portTestOut48, "CH48", yAxis
            commandButton = "Off", cmdtestout48off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout48on,{testactive}
	dialog = DI_portTestOut49, "CH49", yAxis
            commandButton = "Off", cmdtestout49off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout49on,{testactive}
    dialog = DI_portTestOut50, "CH50", yAxis
            commandButton = "Off", cmdtestout50off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout50on,{testactive}
    dialog = DI_portTestOut51, "CH51", yAxis
            commandButton = "Off", cmdtestout51off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout51on,{testactive}
    dialog = DI_portTestOut52, "CH52", yAxis
            commandButton = "Off", cmdtestout52off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout52on	,{testactive}
	dialog = DI_portTestOut53, "CH53", yAxis
            commandButton = "Off", cmdtestout53off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout53on,{testactive}
    dialog = DI_portTestOut54, "CH54", yAxis
            commandButton = "Off", cmdtestout54off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout54on,{testactive}
    dialog = DI_portTestOut55, "CH55", yAxis
            commandButton = "Off", cmdtestout55off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout55on,{testactive}
    dialog = DI_portTestOut56, "CH56", yAxis
            commandButton = "Off", cmdtestout56off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout56on	,{testactive}
	dialog = DI_portTestOut57, "CH57", yAxis
            commandButton = "Off", cmdtestout57off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout57on,{testactive}
    dialog = DI_portTestOut58, "CH58", yAxis
            commandButton = "Off", cmdtestout58off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout58on,{testactive}
    dialog = DI_portTestOut59, "CH59", yAxis
            commandButton = "Off", cmdtestout59off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout59on,{testactive}
    dialog = DI_portTestOut60, "CH60", yAxis
            commandButton = "Off", cmdtestout60off,{testactive}
;			commandButton = "50% DC", cmdtestinj450dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout60on,{testactive}
	dialog = DI_portTestOut61, "CH61", yAxis
            commandButton = "Off", cmdtestout61off,{testactive}
;			commandButton = "50% DC", cmdtestinj150dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout61on,{testactive}
    dialog = DI_portTestOut62, "CH62", yAxis
            commandButton = "Off", cmdtestout62off,{testactive};
;			commandButton = "50% DC", cmdtestinj250dc,{!testenabled &testactive}
            commandButton = "On", cmdtestout62on,{testactive}
    dialog = DI_portTestOut63, "CH63", yAxis
            commandButton = "Off", cmdtestout63off,{testactive};
;			commandButton = "50% DC", cmdtestinj350dc,{!testenabled & testactive}
            commandButton = "On", cmdtestout63on,{testactive}
            
    dialog = outputtest_1, "Port Test 0-15", xAxis
            panel = DI_portTestOut0
            panel = DI_portTestOut1
            panel = DI_portTestOut2
            panel = DI_portTestOut3
            panel = DI_portTestOut4
            panel = DI_portTestOut5
            panel = DI_portTestOut6
            panel = DI_portTestOut7
            panel = DI_portTestOut8
            panel = DI_portTestOut9
            panel = DI_portTestOut10
            panel = DI_portTestOut11
            panel = DI_portTestOut12
            panel = DI_portTestOut13
            panel = DI_portTestOut14
            panel = DI_portTestOut15

    dialog = outputtest_2, "Port Test 16-31", xAxis
            panel = DI_portTestOut16
            panel = DI_portTestOut17
            panel = DI_portTestOut18
            panel = DI_portTestOut19
            panel = DI_portTestOut20
            panel = DI_portTestOut21
            panel = DI_portTestOut22
            panel = DI_portTestOut23
            panel = DI_portTestOut24
            panel = DI_portTestOut25
            panel = DI_portTestOut26
            panel = DI_portTestOut27
            panel = DI_portTestOut28
            panel = DI_portTestOut29
            panel = DI_portTestOut30
            panel = DI_portTestOut31
            
     dialog = outputtest_3, "Port Test 32-47", xAxis
            panel = DI_portTestOut32
            panel = DI_portTestOut33
            panel = DI_portTestOut34
            panel = DI_portTestOut35
            panel = DI_portTestOut36
            panel = DI_portTestOut37
            panel = DI_portTestOut38
            panel = DI_portTestOut39
            panel = DI_portTestOut40
            panel = DI_portTestOut41
            panel = DI_portTestOut42
            panel = DI_portTestOut43
            panel = DI_portTestOut44
            panel = DI_portTestOut45
            panel = DI_portTestOut46
            panel = DI_portTestOut47

     dialog = outputtest_4, "Port Test 48-63", xAxis
            panel = DI_portTestOut48
            panel = DI_portTestOut49
            panel = DI_portTestOut50
            panel = DI_portTestOut51
            panel = DI_portTestOut52
            panel = DI_portTestOut53
            panel = DI_portTestOut54
            panel = DI_portTestOut55
            panel = DI_portTestOut56
            panel = DI_portTestOut57
            panel = DI_portTestOut58
            panel = DI_portTestOut59
            panel = DI_portTestOut60
            panel = DI_portTestOut61
            panel = DI_portTestOut62
            panel = DI_portTestOut63

	dialog = DI_outputtest1,"Test Ports", yAxis
;	        topicHelp = "http://speeduino.com/wiki/index.php/Hardware_testing_page"
			panel = enabletestbuttons
            panel = outputtest_1
            panel = outputtest_2
            panel = outputtest_3
            panel = outputtest_4
            panel = test_warningmessage


;-------------------------------------------------------------------------------
; General help text

       help = helpGeneral, "Heating Controller General Help"
        ;webHelp = "http://speeduino.com/wiki/index.php/Speeduino"
        text = "For current WIKI documentation, click the Web Help button,"
        ;text = "or visit http://www.speeduino.com/."
        text = "<br>"
        ;text = "<br>why not visit our forum http://speeduino.com/forum/"

;------------------------------------------------------------------------------
[ControllerCommands]
; commandName    = command1, command2, commandn...
; command in standard ini format, a command name can be assigned to 1 to n commands that will be executed in order.
;         This does not include any resultant protocol envelope data, only the response data itself.

; WARNING!! These commands bypass TunerStudio's normal memory synchronization. If these commands
; alter mapped settings (Constant) memory in the controller, TunerStudio will have an out of sync condition
; and may create error messages.
; It is expected that these commands would not typically alter any ram mapped to a Constant.

cmdStopTestMode   = "r\$tsCanId\x45\x00\x01\x00\x00"	;cmd 256
cmdEnableTestMode = "r\$tsCanId\x45\x01\x01\x00\x00"	;cmd 257

cmdClearEEPROM    = "r\$tsCanId\x45\x02\x01\x00\x00"  ;cmd 258
cmdReInit         = "r\$tsCanId\x45\x03\x01\x00\x00"  ;cmd 259

cmdtestout0on = "r\$tsCanId\x45\x01\x02\x00\x00"		;cmd 513
cmdtestout1on = "r\$tsCanId\x45\x02\x02\x00\x00"		;cmd 514
cmdtestout2on = "r\$tsCanId\x45\x03\x02\x00\x00"
cmdtestout3on = "r\$tsCanId\x45\x04\x02\x00\x00"		;cmd 516
cmdtestout4on = "r\$tsCanId\x45\x05\x02\x00\x00"		;cmd517
cmdtestout5on = "r\$tsCanId\x45\x06\x02\x00\x00"
cmdtestout6on = "r\$tsCanId\x45\x07\x02\x00\x00"		;cmd519
cmdtestout7on = "r\$tsCanId\x45\x08\x02\x00\x00"		;cmd520
cmdtestout8on = "r\$tsCanId\x45\x09\x02\x00\x00"
cmdtestout9on  = "r\$tsCanId\x45\x0A\x02\x00\x00"		;cmd522
cmdtestout10on = "r\$tsCanId\x45\x0B\x02\x00\x00"
cmdtestout11on = "r\$tsCanId\x45\x0C\x02\x00\x00"
cmdtestout12on = "r\$tsCanId\x45\x0D\x02\x00\x00"
cmdtestout13on = "r\$tsCanId\x45\x0E\x02\x00\x00"		;cmd526
cmdtestout14on = "r\$tsCanId\x45\x0F\x02\x00\x00"
cmdtestout15on = "r\$tsCanId\x45\x10\x02\x00\x00"		;cmd528
cmdtestout16on = "r\$tsCanId\x45\x11\x02\x00\x00"		;cmd 529
cmdtestout17on = "r\$tsCanId\x45\x12\x02\x00\x00"		;cmd 530
cmdtestout18on = "r\$tsCanId\x45\x13\x02\x00\x00"
cmdtestout19on = "r\$tsCanId\x45\x14\x02\x00\x00"		;cmd 532
cmdtestout20on = "r\$tsCanId\x45\x15\x02\x00\x00"		;cmd533
cmdtestout21on = "r\$tsCanId\x45\x16\x02\x00\x00"
cmdtestout22on = "r\$tsCanId\x45\x17\x02\x00\x00"		;cmd535
cmdtestout23on = "r\$tsCanId\x45\x18\x02\x00\x00"		;cmd536
cmdtestout24on = "r\$tsCanId\x45\x19\x02\x00\x00"
cmdtestout25on = "r\$tsCanId\x45\x1A\x02\x00\x00"		;cmd538
cmdtestout26on = "r\$tsCanId\x45\x1B\x02\x00\x00"
cmdtestout27on = "r\$tsCanId\x45\x1C\x02\x00\x00"
cmdtestout28on = "r\$tsCanId\x45\x1D\x02\x00\x00"
cmdtestout29on = "r\$tsCanId\x45\x1E\x02\x00\x00"		;cmd542
cmdtestout30on = "r\$tsCanId\x45\x1F\x02\x00\x00"
cmdtestout31on = "r\$tsCanId\x45\x20\x02\x00\x00"		;cmd544
cmdtestout32on = "r\$tsCanId\x45\x21\x02\x00\x00"		
cmdtestout33on = "r\$tsCanId\x45\x22\x02\x00\x00"		
cmdtestout34on = "r\$tsCanId\x45\x23\x02\x00\x00"
cmdtestout35on = "r\$tsCanId\x45\x24\x02\x00\x00"		
cmdtestout36on = "r\$tsCanId\x45\x25\x02\x00\x00"		
cmdtestout37on = "r\$tsCanId\x45\x26\x02\x00\x00"
cmdtestout38on = "r\$tsCanId\x45\x27\x02\x00\x00"		
cmdtestout39on = "r\$tsCanId\x45\x28\x02\x00\x00"		
cmdtestout40on = "r\$tsCanId\x45\x29\x02\x00\x00"
cmdtestout41on = "r\$tsCanId\x45\x2A\x02\x00\x00"		
cmdtestout42on = "r\$tsCanId\x45\x2B\x02\x00\x00"
cmdtestout43on = "r\$tsCanId\x45\x2C\x02\x00\x00"
cmdtestout44on = "r\$tsCanId\x45\x2D\x02\x00\x00"
cmdtestout45on = "r\$tsCanId\x45\x2E\x02\x00\x00"		
cmdtestout46on = "r\$tsCanId\x45\x2F\x02\x00\x00"
cmdtestout47on = "r\$tsCanId\x45\x30\x02\x00\x00"		
cmdtestout48on = "r\$tsCanId\x45\x31\x02\x00\x00"		
cmdtestout49on = "r\$tsCanId\x45\x32\x02\x00\x00"		
cmdtestout50on = "r\$tsCanId\x45\x33\x02\x00\x00"
cmdtestout51on = "r\$tsCanId\x45\x34\x02\x00\x00"		
cmdtestout52on = "r\$tsCanId\x45\x35\x02\x00\x00"		
cmdtestout53on = "r\$tsCanId\x45\x36\x02\x00\x00"
cmdtestout54on = "r\$tsCanId\x45\x37\x02\x00\x00"		
cmdtestout55on = "r\$tsCanId\x45\x38\x02\x00\x00"		
cmdtestout56on = "r\$tsCanId\x45\x39\x02\x00\x00"
cmdtestout57on = "r\$tsCanId\x45\x3A\x02\x00\x00"		
cmdtestout58on = "r\$tsCanId\x45\x3B\x02\x00\x00"
cmdtestout59on = "r\$tsCanId\x45\x3C\x02\x00\x00"
cmdtestout60on = "r\$tsCanId\x45\x3D\x02\x00\x00"
cmdtestout61on = "r\$tsCanId\x45\x3E\x02\x00\x00"		
cmdtestout62on = "r\$tsCanId\x45\x3F\x02\x00\x00"
cmdtestout63on = "r\$tsCanId\x45\x40\x02\x00\x00"	;cmd 576	

cmdtestout0off = "r\$tsCanId\x45\x01\x03\x00\x00"		;cmd 769
cmdtestout1off = "r\$tsCanId\x45\x02\x03\x00\x00"		;cmd 770
cmdtestout2off = "r\$tsCanId\x45\x03\x03\x00\x00"
cmdtestout3off = "r\$tsCanId\x45\x04\x03\x00\x00"		;cmd 772
cmdtestout4off = "r\$tsCanId\x45\x05\x03\x00\x00"
cmdtestout5off = "r\$tsCanId\x45\x06\x03\x00\x00"
cmdtestout6off = "r\$tsCanId\x45\x07\x03\x00\x00"
cmdtestout7off = "r\$tsCanId\x45\x08\x03\x00\x00"
cmdtestout8off = "r\$tsCanId\x45\x09\x03\x00\x00"
cmdtestout9off  = "r\$tsCanId\x45\x0A\x03\x00\x00"
cmdtestout10off = "r\$tsCanId\x45\x0B\x03\x00\x00"
cmdtestout11off = "r\$tsCanId\x45\x0C\x03\x00\x00"
cmdtestout12off = "r\$tsCanId\x45\x0D\x03\x00\x00"
cmdtestout13off = "r\$tsCanId\x45\x0E\x03\x00\x00"
cmdtestout14off = "r\$tsCanId\x45\x0F\x03\x00\x00"
cmdtestout15off = "r\$tsCanId\x45\x10\x03\x00\x00"		;cmd 784
cmdtestout16off = "r\$tsCanId\x45\x11\x03\x00\x00"		;cmd 785
cmdtestout17off = "r\$tsCanId\x45\x12\x03\x00\x00"		;cmd 786
cmdtestout18off = "r\$tsCanId\x45\x13\x03\x00\x00"
cmdtestout19off = "r\$tsCanId\x45\x14\x03\x00\x00"		;cmd 788
cmdtestout20off = "r\$tsCanId\x45\x15\x03\x00\x00"
cmdtestout21off = "r\$tsCanId\x45\x16\x03\x00\x00"
cmdtestout22off = "r\$tsCanId\x45\x17\x03\x00\x00"
cmdtestout23off = "r\$tsCanId\x45\x18\x03\x00\x00"
cmdtestout24off = "r\$tsCanId\x45\x19\x03\x00\x00"
cmdtestout25off = "r\$tsCanId\x45\x1A\x03\x00\x00"
cmdtestout26off = "r\$tsCanId\x45\x1B\x03\x00\x00"
cmdtestout27off = "r\$tsCanId\x45\x1C\x03\x00\x00"
cmdtestout28off = "r\$tsCanId\x45\x1D\x03\x00\x00"
cmdtestout29off = "r\$tsCanId\x45\x1E\x03\x00\x00"
cmdtestout30off = "r\$tsCanId\x45\x1F\x03\x00\x00"
cmdtestout31off = "r\$tsCanId\x45\x20\x03\x00\x00"		;cmd 800
cmdtestout32off = "r\$tsCanId\x45\x21\x03\x00\x00"		
cmdtestout33off = "r\$tsCanId\x45\x22\x03\x00\x00"		
cmdtestout34off = "r\$tsCanId\x45\x23\x03\x00\x00"
cmdtestout35off = "r\$tsCanId\x45\x24\x03\x00\x00"		
cmdtestout36off = "r\$tsCanId\x45\x25\x03\x00\x00"
cmdtestout37off = "r\$tsCanId\x45\x26\x03\x00\x00"
cmdtestout38off = "r\$tsCanId\x45\x27\x03\x00\x00"
cmdtestout39off = "r\$tsCanId\x45\x28\x03\x00\x00"
cmdtestout40off = "r\$tsCanId\x45\x29\x03\x00\x00"
cmdtestout41off = "r\$tsCanId\x45\x2A\x03\x00\x00"
cmdtestout42off = "r\$tsCanId\x45\x2B\x03\x00\x00"
cmdtestout43off = "r\$tsCanId\x45\x2C\x03\x00\x00"
cmdtestout44off = "r\$tsCanId\x45\x2D\x03\x00\x00"
cmdtestout45off = "r\$tsCanId\x45\x2E\x03\x00\x00"
cmdtestout46off = "r\$tsCanId\x45\x2F\x03\x00\x00"
cmdtestout47off = "r\$tsCanId\x45\x30\x03\x00\x00"	
cmdtestout48off = "r\$tsCanId\x45\x31\x03\x00\x00"	
cmdtestout49off = "r\$tsCanId\x45\x32\x03\x00\x00"	
cmdtestout50off = "r\$tsCanId\x45\x33\x03\x00\x00"
cmdtestout51off = "r\$tsCanId\x45\x34\x03\x00\x00"	
cmdtestout52off = "r\$tsCanId\x45\x35\x03\x00\x00"
cmdtestout53off = "r\$tsCanId\x45\x36\x03\x00\x00"
cmdtestout54off = "r\$tsCanId\x45\x37\x03\x00\x00"
cmdtestout55off = "r\$tsCanId\x45\x38\x03\x00\x00"
cmdtestout56off = "r\$tsCanId\x45\x39\x03\x00\x00"
cmdtestout57off = "r\$tsCanId\x45\x3A\x03\x00\x00"
cmdtestout58off = "r\$tsCanId\x45\x3B\x03\x00\x00"
cmdtestout59off = "r\$tsCanId\x45\x3C\x03\x00\x00"
cmdtestout60off = "r\$tsCanId\x45\x3D\x03\x00\x00"
cmdtestout61off = "r\$tsCanId\x45\x3E\x03\x00\x00"
cmdtestout62off = "r\$tsCanId\x45\x3F\x03\x00\x00"
cmdtestout63off = "r\$tsCanId\x45\x40\x03\x00\x00"	 ;cmd832



; -------------------------------------------------------------
[PortEditor]


;-------------------------------------------------------------------------------

; Help down here
[SettingContextHelp]


[CurveEditor]

; ExampleTable curve
  curve = ExampleTableCurve, "Example byte table"
    columnLabel = "Xaxis", "Ydata"
    xAxis       = 0, 255, 8
    yAxis       = 0, 255, 8
    xBins       = exampleTable_Xaxis
    yBins       = exampleTable_Ydata


[TableEditor]

; Example3DTable
          ;table_id,   map3d_id,    "title",      page
  table = example3DTbl, example3DMap, "Example 3D Table u8", 2
  ;topicHelp = "file://$getProjectsDirPath()/docs/HelpFile1.2.pdf#someAnch"
          ; constant, OutputChannel
  xyLabels = "X axis", "Y axis"
  ; constant, OutputChannel
  xBins = example3DTable_Xaxis, Ve_i_example3DXLookup
  yBins = example3DTable_Yaxis, Ve_i_example3DYLookup
  zBins = example3DTable_Zdata
  upDownLabel = "MORE", "LESS"
  gridHeight = 2.0
  gridOrient = 250, 0, 340 ; Space 123 rotation of grid in degrees.


   ;       table_id,    map3d_id,    "title",      page
   ;table = veTable1Tbl,  veTable1Map,  "VE Table",   1
   ;topicHelp = "http://speeduino.com/wiki/index.php/Tuning"
   ;;       constant, variable
    ;  xBins       = rpmBins,  rpm
   ;#if SPEED_DENSITY
   ;   yBins       = mapBins,  map
   ;#else
   ;   yBins       = tpsBins,  throttle
   ;#endif
   ;   zBins       = veTable

   ;   gridHeight  = 2.0
   ;   gridOrient  = 250,   0, 340 ; Space 123 rotation of grid in degrees.
   ;   upDownLabel = "(RICHER)", "(LEANER)"

;-------------------------------------------------------------------------------

[GaugeConfigurations]

   ;-------------------------------------------------------------------------------
   ;  Notes on some of the gauges.
   ;
   ;  The accelEnrichGauge is now a composite of both acceleration enrichment
   ;  and deceleration enleanment numbers.  See the definition of the variable
   ;  accDecEnrich in the OutputChannels section.
   ;
   ;-------------------------------------------------------------------------------
   ; Define a gauge's characteristics here, then go to a specific layout
   ; block (Tuning or FrontPage) and use the name you've defined here to
   ; display that gauge in a particular position.
   ;
   ; Name  = Case-sensitive, user-defined name for this gauge configuration.
   ; Var   = Case-sensitive name of variable to be displayed, see the
   ;         OutputChannels block in this file for possible values.
   ; Title = Title displayed at the top of the gauge.
   ; Units = Units displayed below value on gauge.
   ; Lo    = Lower scale limit of gauge.
   ; Hi    = Upper scale limit of gauge.
   ; LoD   = Lower limit at which danger color is used for gauge background.
   ; LoW   = Lower limit at which warning color is used.
   ; HiW   = Upper limit at which warning color is used.
   ; HiD   = Upper limit at which danger color is used.
   ; vd    = Decimal places in displayed value
   ; ld    = Label decimal places for display of Lo and Hi, above.

   ;Name               Var            Title                 Units     Lo     Hi     LoD    LoW   HiW   HiD vd ld
   ; baroADCGauge      = baroADC,       "Barometer ADC",      "",        0,   255,     -1,    -1,  256,  256, 0, 0

   gaugeCategory = "System"
     clockGauge        = secl,          	"Clock",              	"Seconds",  0,   255,     10,    10,   245,  245, 0, 0
     loopGauge         = loopsPerSecond,	"Main loop speed",    	"Loops/S" , 0,  7000,    500,   1000,  65535, 65535, 0, 0
     readsGauge   		 = readsPerSecond,	"Datalog Rate"		    	"Reads/S",	0,		500,	1,		5,	100,		250,	0,	0
     memoryGauge       = UTIL_freeRam,    "Free memory",        	"bytes" ,   0,  8000,  500, 1000, 8000, 8000, 0, 0
   
   gaugeCategory = "Test and Dev"
     devgauge1         = dev1,		    "dev1"					"",			0,		1024,	-1,		-1,	1025,		1025,	0,	0
     devgauge2         = dev2,		    "dev2"					"",			0,		1024,	-1,		-1,	1025,		1025,	0,	0
     devgauge3         = dev3,		    "dev3"					"",			0,		1024,	-1,		-1,	1025,		1025,	0,	0
     devgauge4         = dev4,		    "dev4"					"",			0,		1024,	-1,		-1,	1025,		1025,	0,	0
     testFloatGauge    = Vf_i_TestFloatOut, "Vf_i_TestFloatOut"					"",			-1000,		1000,	-1025,		-100,	100,		1025,	2,	0
     Ve_i_TestByte1Gauge= Ve_i_TestByte1,		    "Ve_i_TestByte1"		"",			0,		255,	-1,		-1,	255,		255,	0,	0
     Ve_Eqr_Sensor1Gauge  = Ve_Eqr_Sensor1, "Ve_Eqr_Sensor1"					"",			-1000,		1000,	-1025,		-100,	100,		1025,	2,	0
     
     z1         = z1,		    "z1"					"",			0,		1024,	-1,		-1,	1025,		1025,	0,	0
     z2         = z2,		    "z2"					"",			0,		1024,	-1,		-1,	1025,		1025,	0,	0
     z3         = z3,		    "z3"					"",			0,		1024,	-1,		-1,	1025,		1025,	0,	0
     z4         = z4,		    "z4"					"",			0,		1024,	-1,		-1,	1025,		1025,	0,	0
     Xinterp1         = Xinterp1,		    "Xinterp1"					"",			0,		1024,	-1,		-1,	1025,		1025,	0,	0
     Xinterp2         = Xinterp2,		    "Xinterp2"					"",			0,		1024,	-1,		-1,	1025,		1025,	0,	0

   gaugeCategory = "Analog Inputs"
     Ain0Gauge         = Ain0,		    "Ain0"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain1Gauge         = Ain1,		    "Ain1"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain2Gauge         = Ain2,		    "Ain2"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain3Gauge         = Ain3,		    "Ain3"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain4Gauge         = Ain4,		    "Ain4"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain5Gauge         = Ain5,		    "Ain5"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain6Gauge         = Ain6,		    "Ain6"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain7Gauge         = Ain7,		    "Ain7"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain8Gauge         = Ain8,		    "Ain8"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain9Gauge         = Ain9,		    "Ain9"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain10Gauge        = Ain10,		    "Ain10"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain11Gauge        = Ain11,		    "Ain11"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain12Gauge        = Ain12,		    "Ain12"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain13Gauge        = Ain13,		    "Ain13"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain14Gauge        = Ain14,		    "Ain14"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0
     Ain15Gauge        = Ain15,		    "Ain15"					"ADC",			0,		1023,	1,		5,	1018,		1022,	0,	0


;-------------------------------------------------------------------------------

[FrontPage]


   ; Gauges are numbered left to right, top to bottom.
   ;
   ;    1  2  3  4  5
   ;    6  7  8  9  10

   gauge1 = clockGauge
   gauge4 = loopGauge
   gauge5 = devgauge1
   gauge6 = devgauge2
   gauge7 = devgauge3
   gauge8 = devgauge4
   gauge9 = readsGauge
   gauge10 = memoryGauge



  ;----------------------------------------------------------------------------
  ;Indicators = OutputChannel off-label on-label, off-bg, off-fg, on-bg, on-fg
  ;---------- ------------- --------- -------- ------- ------- ------ -----

  ; Colours: red, black, green, blue, cyan, yellow, white, darkGray, gray, lightGray, magenta


  indicator = { sys_ready         }, "Sys: Not Ready",     		  "Sys: Ready",     Red, 	   black,   green,   black
  indicator = { sys_warn          }, "Sys: OK",            		  "Sys: Warn",      green,   black,   yellow,   black
  indicator = { burn_good         }, "Writing",     		        "Burned",         Red,     black,   green,   black
  indicator = { testactive        }, "HW Test Off",     		    "HW Test On",     Red,     black,   green,   black
  indicator = { burn_good         }, "Writing",     		        "Burned",         Red,     black,   green,   black
  indicator = { can0Activated      }, "CAN 0 Not Active",   "CAN 0 Activated",    Red, 	   black,   green,   black
  indicator = { can1Activated      }, "CAN 1 Not Active",   "CAN 1 Activated",    Red, 	   black,   green,   black
  indicator = { can0Failed        }, "CAN 0 TX OK",         "CAN 0 TX Failed",    green,   black,   Red,     black
  indicator = { can1Failed        }, "CAN 1 TX OK",         "CAN 1 TX Failed",    green,   black,   Red, 	   black
  indicator = { can0MsgFail        }, "CAN 0 MSG OK",       "CAN 0 MSG Fail",     green,   black,   Red, 	   black
  indicator = { can1MsgFail        }, "CAN 1 MSG OK",       "CAN 1 MSG Fail",     green,   black,   Red, 	   black
  indicator = { can0RxFail        }, "CAN 0 RX OK",         "CAN 0 RX Failed",    green,   black,   Red, 	   black
  indicator = { can1RxFail        }, "CAN 1 RX OK",         "CAN 1 RX Failed",    green,   black,   Red, 	   black
  indicator = { canRXmsg_MotecPLM_dflt}, "CAN RX MotecPLM OK",         "CAN RX MotecPLM Dflt",    green,   black,   Red, 	   black

  indicatorTemplate = { TimerDelayWarn_1000MS }, "1Sec OK",    "1Sec Dly",    grey, 	black,  red,   black
  indicatorTemplate = { TimerDelayWarn_500MS  }, "500ms OK",   "500ms Dly",   grey, 	black,  red,   black
  indicatorTemplate = { TimerDelayWarn_250MS  }, "250ms OK",   "250ms Dly",   grey, 	black,  red,   black
  indicatorTemplate = { TimerDelayWarn_100MS  }, "100ms OK",   "100ms Dly",   grey, 	black,  red,   black
  indicatorTemplate = { TimerDelayWarn_75MS   }, "75ms OK",    "75ms Dly",    grey, 	black,  red,   black
  indicatorTemplate = { TimerDelayWarn_50MS   }, "50ms OK",    "50ms Dly",    grey, 	black,  red,   black
  indicatorTemplate = { TimerDelayWarn_20MS   }, "20ms OK",    "20ms Dly",    grey, 	black,  red,   black
  indicatorTemplate = { TimerDelayWarn_5MS    }, "5ms OK",     "5ms Dly",     grey, 	black,  red,   black



;-------------------------------------------------------------------------------


[RunTime]


;-------------------------------------------------------------------------------

[Tuning]

   font            = "Courier", 14
   spotDepth       =   2 ; 0 = no indicators, 1 = Z only, 2 = XYZ indicators.
   cursorDepth     =   2 ; Same as spot depth.

   ; The four radio buttons on the tuning screen select a "page" of six
   ; gauges.  The gauge numbering is the same as the front page, across
   ; then down.
   ;             1  2
   ;             3  4
   ;             5  6
   ;
   ; gaugeColumns allows you to hide or show gauges in column 2 (i.e.,
   ; gauges 2, 4 and 6).

  ; gaugeColumns = 2 ; Only 1 or 2 are valid.

   ;----------------------------------------------------------------------------
   ; Notes on tuning screen gauges:
   ;   pageButtons = Labels for radio buttons at bottom of tuning dialog.
   ;
   ;   Gauge 2 previously switched automatically to be tpsGauge when alpha-n
   ;   was enabled, but you need to do it manually now.
   ;----------------------------------------------------------------------------
   ;              Page 1            Page 2             Page 3            Page 4
   ;pageButtons  = "&EGO",           "&WUE",            "PW&1",           "PW&2"
   ;gauge1       = tachometer,       tachometer,        tachometer,       tachometer
   ;gauge2       = mapGauge,         mapGauge,          mapGauge,         mapGauge
   ;gauge3       = egoGauge,         egoGauge,          egoGauge,         egoGauge
   ;gauge4       = egoCorrGauge,     warmupEnrichGauge, pulseWidthGauge,  pulseWidthGauge
   ;gauge5       = veBucketGauge,    veBucketGauge,     veBucketGauge,    veBucketGauge
   ;gauge6       = accelEnrichGauge, accelEnrichGauge,  dutyCycleGauge,   dutyCycleGauge

;-------------------------------------------------------------------------------

[OutputChannels]
   ; The number of bytes MegaTune or TunerStudio should expect as a result
   ; of sending the "A" command to Speeduino is determined
   ; by the value of ochBlockSize, so be very careful when
   ; you change it.

#if FAST_COMMS
   ochGetCommand    = "r\$tsCanId\x3C%2o%2c"
#else
   ochGetCommand = "A"
#endif
   ; this size must match the total byte size of the channels to be recieved. Check ochBlockSizeSent
   ochBlockSize     =  86

   secl             = scalar, U08,  0, "sec",    1.000, 0.000
   
   system           = scalar, U08,  nextOffset, "bits",   1.000, 0.000
    sys_ready       = bits,    U08,    lastOffset, [0:0]
    sys_warn        = bits,    U08,    lastOffset, [1:1]
    spare1_1c       = bits,    U08,    lastOffset, [2:2]
    spare1_1d       = bits,    U08,    lastOffset, [3:3]
    spare1_1e       = bits,    U08,    lastOffset, [4:4]
    spare1_1f       = bits,    U08,    lastOffset, [5:5]
    spare1_1g       = bits,    U08,    lastOffset, [6:6]
    burn_good       = bits,    U08,    lastOffset, [7:7]
    
   TIMR_LoopDlyWarnBits bits = scalar, U08,  nextOffset, "bits",   1.000, 0.000
    TimerDelayWarn_1000MS      = bits,    U08,    lastOffset, [0:0]
    TimerDelayWarn_500MS       = bits,    U08,    lastOffset, [1:1]
    TimerDelayWarn_250MS       = bits,    U08,    lastOffset, [2:2]
    TimerDelayWarn_100MS       = bits,    U08,    lastOffset, [3:3]
    TimerDelayWarn_75MS        = bits,    U08,    lastOffset, [4:4]
    TimerDelayWarn_50MS        = bits,    U08,    lastOffset, [5:5]
    TimerDelayWarn_20MS        = bits,    U08,    lastOffset, [6:6]
    TimerDelayWarn_5MS         = bits,    U08,    lastOffset, [7:7]
    
   canstatus        = scalar, U08,  nextOffset, "bits",   1.000, 0.000
    can0Activated   = bits,    U08,    lastOffset, [0:0]
    can0Failed      = bits,    U08,    lastOffset, [1:1]
    can1Activated   = bits,    U08,    lastOffset, [2:2]
    can1Failed      = bits,    U08,    lastOffset, [3:3]
    can0MsgFail     = bits,    U08,    lastOffset, [4:4]
    can1MsgFail     = bits,    U08,    lastOffset, [5:5]
    can0RxFail	    = bits,    U08,    lastOffset, [6:6]
    can1RxFail	    = bits,    U08,    lastOffset, [7:7]
    
   canRXmsg_dflt    = scalar,  U16,    nextOffset, "bits",    1.000, 0.000
     canRXmsg_MotecPLM_dflt    = bits,     U16,	lastOffset, [0:0]
     canRXmsg_unused_dflt      = bits,     U16,	lastOffset, [8:8]

   loopsPerSecond   = scalar,   U16,    nextOffset, "loops",  1.000, 0.000
   readsPerSecond   = scalar,   U16,    nextOffset, "reads",  1.000, 0.000
   UTIL_freeRam     = scalar,   S16,    nextOffset, "bytes",  1.000, 0.000

   testoutputs      = scalar,   U08,    nextOffset, "bits",   1.000, 0.000
    testenabled      = bits,    U08,	  lastOffset, [0:0]
    testactive       = bits,    U08,	  lastOffset, [1:1]

   digitalports0_15	= scalar,  U16,  nextOffset, "bits", 1.000, 0.000
    digitalport0    = bits,     U16,	lastOffset, [0:0]
    digitalport1    = bits,     U16,	lastOffset, [1:1]
    digitalport2    = bits,     U16,	lastOffset, [2:2]
    digitalport3    = bits,     U16,	lastOffset, [3:3]
    digitalport4    = bits,     U16,	lastOffset, [4:4]
    digitalport5    = bits,     U16,	lastOffset, [5:5]
    digitalport6    = bits,     U16,	lastOffset, [6:6]
    digitalport7    = bits,     U16,	lastOffset, [7:7]
    digitalport8    = bits,     U16,	lastOffset, [8:8]
    digitalport9    = bits,     U16,	lastOffset, [9:9]
    digitalport10   = bits,     U16,	lastOffset, [10:10]
    digitalport11   = bits,     U16,	lastOffset, [11:11]
    digitalport12   = bits,     U16,	lastOffset, [12:12]
    digitalport13   = bits,     U16,	lastOffset, [13:13]
    digitalport14   = bits,     U16,	lastOffset, [14:14]
    digitalport15   = bits,     U16,	lastOffset, [15:15]

   digitalports16_31 = scalar, U16,  nextOffset, "bits", 1.000, 0.000
    digitalport16    = bits,    U16,	lastOffset, [0:0]
    digitalport17    = bits,    U16,	lastOffset, [1:1]
    digitalport18    = bits,    U16,	lastOffset, [2:2]
    digitalport19    = bits,    U16,	lastOffset, [3:3]
    digitalport20    = bits,    U16,	lastOffset, [4:4]
    digitalport21    = bits,    U16,	lastOffset, [5:5]
    digitalport22    = bits,    U16,	lastOffset, [6:6]
    digitalport23    = bits,    U16,	lastOffset, [7:7]
    digitalport24    = bits,    U16,	lastOffset, [8:8]
    digitalport25    = bits,    U16,	lastOffset, [9:9]
    digitalport26    = bits,    U16,	lastOffset, [10:10]
    digitalport27    = bits,    U16,	lastOffset, [11:11]
    digitalport28    = bits,    U16,	lastOffset, [12:12]
    digitalport29    = bits,    U16,	lastOffset, [13:13]
    digitalport30    = bits,    U16,	lastOffset, [14:14]
    digitalport31    = bits,    U16,	lastOffset, [15:15]

   digitalports32_47 = scalar, U16,  nextOffset, "bits", 1.000, 0.000
    digitalport32    = bits,    U16,	lastOffset, [0:0]
    digitalport33    = bits,    U16,	lastOffset, [1:1]
    digitalport34    = bits,    U16,	lastOffset, [2:2]
    digitalport35    = bits,    U16,	lastOffset, [3:3]
    digitalport36    = bits,    U16,	lastOffset, [4:4]
    digitalport37    = bits,    U16,	lastOffset, [5:5]
    digitalport38    = bits,    U16,	lastOffset, [6:6]
    digitalport39    = bits,    U16,	lastOffset, [7:7]
    digitalport40    = bits,    U16,	lastOffset, [8:8]
    digitalport41    = bits,    U16,	lastOffset, [9:9]
    digitalport42    = bits,    U16,	lastOffset, [10:10]
    digitalport43    = bits,    U16,	lastOffset, [11:11]
    digitalport44    = bits,    U16,	lastOffset, [12:12]
    digitalport45    = bits,    U16,	lastOffset, [13:13]
    digitalport46    = bits,    U16,	lastOffset, [14:14]
    digitalport47    = bits,    U16,	lastOffset, [15:15]

   digitalports48_63 = scalar, U16,  nextOffset, "bits", 1.000, 0.000
    digitalport48    = bits,    U16,	lastOffset, [0:0]
    digitalport49    = bits,    U16,	lastOffset, [1:1]
    digitalport50    = bits,    U16,	lastOffset, [2:2]
    digitalport51    = bits,    U16,	lastOffset, [3:3]
    digitalport52    = bits,    U16,	lastOffset, [4:4]
    digitalport53    = bits,    U16,	lastOffset, [5:5]
    digitalport54    = bits,    U16,	lastOffset, [6:6]
    digitalport55    = bits,    U16,	lastOffset, [7:7]
    digitalport56    = bits,    U16,	lastOffset, [8:8]
    digitalport57    = bits,    U16,	lastOffset, [9:9]
    digitalport58    = bits,    U16,	lastOffset, [10:10]
    digitalport59    = bits,    U16,	lastOffset, [11:11]
    digitalport60    = bits,    U16,	lastOffset, [12:12]
    digitalport61    = bits,    U16,	lastOffset, [13:13]
    digitalport62    = bits,    U16,	lastOffset, [14:14]
    digitalport63    = bits,    U16,	lastOffset, [15:15]

   Ain0	    		     = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain1			         = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain2	    		     = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain3			         = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain4	    		     = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain5			         = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain6	    		     = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain7			         = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain8	    		     = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain9	    		     = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain10    		     = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain11			       = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain12	    	     = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain13			       = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain14    		     = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   Ain15		         = scalar,  U16,	nextOffset,	"",		1.000, 0.000
   
   ; Examples below here, can be removed for your project
                    
   dev1				       = scalar,  U16,  nextOffset, "",   1.00, 0.000
   dev2				       = scalar,  U16,  nextOffset, "",   1.00, 0.000
   dev3				       = scalar,  U16,  nextOffset, "",   1.00, 0.000
   dev4				       = scalar,  U16,  nextOffset, "",   1.00, 0.000

   Vf_i_TestFloatOut = scalar,  F32,  nextOffset, "",   1.000, 0.000
   Ve_i_TestByte1    = scalar,  U08,  nextOffset,	"",   1.000, 0.000
   Ve_Eqr_Sensor1    = scalar,  F32,  nextOffset, "",   1.000, 0.000
   
   Ve_i_example3DXLookup = scalar,  U16,  nextOffset, "",   1.00, 0.000
   Ve_i_example3DYLookup = scalar,  U16,  nextOffset, "",   1.00, 0.000
   
   z1				         = scalar,  U16,  nextOffset, "",   1.00, 0.000
   z2				         = scalar,  U16,  nextOffset, "",   1.00, 0.000
   z3				         = scalar,  U16,  nextOffset, "",   1.00, 0.000
   z4				         = scalar,  U16,  nextOffset, "",   1.00, 0.000
   
   Xinterp1	         = scalar,  U16,  nextOffset, "",   1.00, 0.000
   Xinterp2          = scalar,  U16,  nextOffset, "",   1.00, 0.000

   ; Computed output channels.  See "megatuneExamples.ini" for all the
   ; pre-defined variables, search for "???" and you'll see them.
   time             = { timeNow                                      } ; "timeNow" is a parameterless built-in function.
   seconds          = { secl                                          };

;-------------------------------------------------------------------------------

[Datalog]
   ; Full datalog.
   ;
   ; Default user-defined log emulates the full datalog.
   ;
   ; The entries are saved in the datalog file in the order in
   ; which they appear in the list below.
   ;
   ;   Channel - Case sensitive name of output channel to be logged.
   ;   Label   - String written to header line of log.  Be careful
   ;             about changing these, as programs like MSLVV and
   ;             MSTweak key off specific column names.
   ;   Type    - Data type of output, converted before writing.
   ;   Format  - C-style output format of data.
   ;
   ;       Channel              Label             Type    Format
   ;       --------------       ----------        -----   ------
   entry = time,                "Time",           float,  "%.3f"
   entry = secl,                "SecL",           int,    "%d"
   entry = loopsPerSecond,      "loopsPerSecond", int,    "%d"
   entry = readsPerSecond,      "readsPerSecond", int,    "%d"
   entry = can0Activated,       "can0Activated",  int,    "trueFalse"
   entry = can0Failed,          "can0Failed",     int,    "trueFalse"
   entry = can0MsgFail,         "can0MsgFail",    int,    "trueFalse"
   entry = can0RxFail,          "can0RxFail",     int,    "trueFalse"
   entry = testenabled,         "HW test enabled",int,    "trueFalse"
   entry = testactive,          "HW test active", int,    "trueFalse"
   entry = digitalports0_15     "Dig in 0-15",    int,    "%d"
   entry = digitalports16_31    "Dig in 16-31"    int,    "%d"
   entry = digitalport0         "Dig in 0"        int,    "highLow"
   entry = digitalport1         "Dig in 1"        int,    "highLow"
   entry = digitalport2         "Dig in 2"        int,    "highLow"
   entry = digitalport3         "Dig in 3"        int,    "highLow"
   entry = digitalport4         "Dig in 4"        int,    "highLow"
   entry = digitalport5         "Dig in 5"        int,    "highLow"
   entry = digitalport6         "Dig in 6"        int,    "highLow"
   entry = digitalport7         "Dig in 7"        int,    "highLow"
   entry = digitalport8         "Dig in 8"        int,    "highLow"
   entry = digitalport9         "Dig in 9"        int,    "highLow"
   entry = digitalport10        "Dig in 10"       int,    "highLow"
   entry = digitalport11        "Dig in 11"       int,    "highLow"
   entry = digitalport12        "Dig in 12"       int,    "highLow"
   entry = digitalport13        "Dig in 13"       int,    "highLow"
   entry = digitalport14        "Dig in 14"       int,    "highLow"
   entry = digitalport15        "Dig in 15"       int,    "highLow"
   entry = digitalport16        "Dig in 16"       int,    "highLow"
   entry = Ain0                 "Analog In0"      int,    "%d"
   entry = Ain1                 "Analog In1"      int,    "%d"
   entry = Ain2                 "Analog In2"      int,    "%d"
   entry = Ain3                 "Analog In3"      int,    "%d"
   
   ; Examples below here, can be removed for your project
   entry = dev1                 "dev1"            int,    "%d"
   entry = dev2                 "dev2"            int,    "%d"
   entry = dev3                 "dev3"            int,    "%d"
   entry = dev4                 "dev4"            int,    "%d"
   entry = Ve_i_TestByte1       "Ve_i_TestByte1"  int,    "%d"
   entry = canRXmsg_MotecPLM_dflt "canRXmsg_MotecPLM_dflt" int, "activeInactive"

   entry = Vf_i_TestFloatOut    "Vf_i_TestFloatOut" float, "%.1f"
   entry = Ve_i_example3DXLookup "3DXLookup"       int,    "%d"
   entry = Ve_i_example3DYLookup "3DYLookup"       int,    "%d"

   entry = z1                 "z1"            int,    "%d"
   entry = z2                 "z2"            int,    "%d"
   entry = z3                 "z3"            int,    "%d"
   entry = z4                 "z4"            int,    "%d"
   entry = Xinterp1           "Xinterp1"            int,    "%d"
   entry = Xinterp2           "Xinterp2"            int,    "%d"


[LoggerDefinition]
    ; valid logger types: composite, tooth, trigger, csv

    ;loggerDef = uniqueName, Display Name, type

[Tools]
	;addTool = toolName, PanelName
	;addTool = veTableGenerator, "VE Table Generator", veTable1Tbl
	;addTool = afrTableGenerator, "AFR Table Generator", afrTable1Tbl

[VeAnalyze]
	         ;    tableName,  lambdaTargetTableName, lambdaChannel, egoCorrectionChannel, activeCondition